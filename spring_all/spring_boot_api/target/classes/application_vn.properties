# ===================================================================
# COMMON SPRING BOOT PROPERTIES
#
# This sample file is provided as a guideline. Do NOT copy it in its
# entirety to your own application. ^^^
# ===================================================================


# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------
debug = false # B?t nh?t k� g? l?i.
trace = false # B?t nh?t k� theo d�i

# LOGGING
logging.config = # V? tr� c?a t?p c?u h�nh ghi nh?t k�. V� d?: `classpath: logback.xml` cho Logback.
logging.exception-convert-word =% wEx # T? chuy?n ??i ???c s? d?ng khi ghi ngo?i l?.
logging.file = # T�n t?p nh?t k� (v� d?: `myapp.log`). T�n c� th? l� m?t v? tr� ch�nh x�c ho?c li�n quan ??n th? m?c hi?n t?i.
logging.file.max-history = 0 # T?i ?a c�c t?p nh?t k� l?u tr? c?n gi?. Ch? ???c h? tr? v?i thi?t l?p ??ng nh?p m?c ??nh.
logging.file.max-size = 10MB # K�ch th??c t?p nh?t k� t?i ?a. Ch? ???c h? tr? v?i thi?t l?p ??ng nh?p m?c ??nh.
logging.group. * = # Nh�m nh?t k� ?? nhanh ch�ng thay ??i nhi?u tr�nh ghi nh?t k� c�ng m?t l�c. V� d?: `logging.level.db = org.hibernate, org.springframework.jdbc`.
logging.level. * = # �nh x? m?c ?? nghi�m tr?ng c?a nh?t k�. V� d?: `logging.level.org.springframework = DEBUG`.
logging.path = # V? tr� c?a t?p nh?t k�. V� d?: `/ var / log`.
logging.pattern.console = # M?u Appender ?? xu?t ra b?ng ?i?u khi?n. Ch? ???c h? tr? v?i thi?t l?p Logback m?c ??nh.
logging.pattern.dateformat = yyyy-MM-dd HH: mm: ss.SSS # M?u Appender cho ??nh d?ng ng�y nh?t k�. Ch? ???c h? tr? v?i thi?t l?p Logback m?c ??nh.
logging.pattern.file = # M?u th�m v�o ?? xu?t ra t?p. Ch? ???c h? tr? v?i thi?t l?p Logback m?c ??nh.
logging.pattern.level =% 5p # M?u Appender cho c?p nh?t k�. Ch? ???c h? tr? v?i thi?t l?p Logback m?c ??nh.
logging.register-shutdown-hook = false # ??ng k� m?t hook t?t cho h? th?ng ghi nh?t k� khi n� ???c kh?i t?o.

# AOP
spring.aop.auto = true # Th�m @EnableAspectJAutoProxy.
spring.aop.proxy-target-class = true # Li?u proxy d?a tr�n l?p con (CGLIB) c� ???c t?o hay kh�ng (true), tr�i ng??c v?i proxy d?a tr�n giao di?n Java ti�u chu?n (false).

# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name = # T�n ?ng d?ng.

# ADMIN (SpringApplicationAdminJmxAutoConfiguration)
spring.application.admin.enabled = false # C� b?t c�c t�nh n?ng qu?n tr? cho ?ng d?ng hay kh�ng.
spring.application.admin.jmx-name = org.springframework.boot: type = Admin, name = SpringApplication # T�n JMX c?a qu?n tr? vi�n ?ng d?ng MBean.

# AUTO-CONFIGURATION
spring.autoconfigure.exclude = # C�c l?p c?u h�nh t? ??ng ?? lo?i tr?.

# BANNER
spring.banner.charset = UTF-8 # M� h�a t?p bi?u ng?.
spring.banner.location = classpath: banner.txt # V? tr� t�i nguy�n v?n b?n bi?u ng?.
spring.banner.image.location = classpath: banner.gif # V? tr� t?p h�nh ?nh bi?u ng? (c?ng c� th? s? d?ng jpg ho?c png).
spring.banner.image.width = 76 # Chi?u r?ng c?a h�nh ?nh bi?u ng? b?ng k� t?.
spring.banner.image.height = # Chi?u cao c?a h�nh ?nh bi?u ng? theo k� t? (m?c ??nh d?a tr�n chi?u cao h�nh ?nh).
spring.banner.image.margin = 2 # L? h�nh ?nh b�n tr�i b?ng k� t?.
spring.banner.image.invert = false # C� n�n ??o ng??c h�nh ?nh cho c�c ch? ?? ??u cu?i t?i hay kh�ng.

# SPRING CORE
spring.beaninfo.ignore = true # C� b? qua t�m ki?m c�c l?p BeanInfo hay kh�ng. 

# SPRING CACHE (CacheProperties)
spring.cache.cache-names = # Danh s�ch t�n b? ??m ???c ph�n t�ch b?ng d?u ph?y ?? t?o n?u ???c h? tr? b?i tr�nh qu?n l� b? ??m b�n d??i.
spring.cache.caffeine.spec = # Th�ng s? k? thu?t s? d?ng ?? t?o b? nh? ??m. Xem CaffeineSpec ?? bi?t th�m chi ti?t v? ??nh d?ng th�ng s? k? thu?t.
spring.cache.couchbase.expiration = # H?t h?n m?c nh?p. Theo m?c ??nh, c�c m?c nh?p kh�ng bao gi? h?t h?n. L?u � r?ng gi� tr? n�y cu?i c�ng ???c chuy?n ??i th�nh gi�y.
spring.cache.ehcache.config = # V? tr� c?a t?p c?u h�nh ???c s? d?ng ?? kh?i t?o EhCache.
spring.cache.infinispan.config = # V? tr� c?a t?p c?u h�nh ???c s? d?ng ?? kh?i t?o Infinispan.
spring.cache.jcache.config = # V? tr� c?a t?p c?u h�nh ???c s? d?ng ?? kh?i t?o tr�nh qu?n l� b? nh? cache.
spring.cache.jcache.provider = # T�n ?? ?i?u ki?n c?a tri?n khai CachingProvider ?? s? d?ng ?? truy xu?t tr�nh qu?n l� b? nh? cache tu�n th? JSR-107. Ch? c?n thi?t n?u c� nhi?u h?n m?t tri?n khai JSR-107 tr�n classpath.
spring.cache.redis.cache-null-values = true # Cho ph�p l?u c�c gi� tr? null v�o b? nh? ??m.
spring.cache.redis.key-prefix = # Ti?n t? kh�a.
spring.cache.redis.time-to-live = # H?t h?n m?c nh?p. Theo m?c ??nh, c�c m?c nh?p kh�ng bao gi? h?t h?n.
spring.cache.redis.use-key-prefix = true # C� s? d?ng ti?n t? kh�a khi vi?t th? cho Redis.
spring.cache.type = # Lo?i b? nh? ??m. Theo m?c ??nh, t? ??ng ph�t hi?n theo m�i tr??ng.

# SPRING CONFIG - using environment property only (ConfigFileApplicationListener)
spring.config.additional-location = # ??nh c?u h�nh c�c v? tr� t?p ???c s? d?ng ngo�i c�c gi� tr? m?c ??nh.
spring.config.location = # ??nh c?u h�nh c�c v? tr� t?p thay th? c�c gi� tr? m?c ??nh.
spring.config.name = application # ??t c?u h�nh t�n t?p.
# HAZELCAST (HazelcastProperties)
spring.hazelcast.config = # V? tr� c?a t?p c?u h�nh s? s? d?ng ?? kh?i t?o Hazelcast.

# PROJECT INFORMATION (ProjectInfoProperties)
spring.info.build.encoding = UTF-8 # M� h�a t?p.
spring.info.build.location = classpath: META-INF / build-info.properties # V? tr� c?a t?p build-info.properties ?� t?o.
spring.info.git.encoding = UTF-8 # M� h�a t?p.
spring.info.git.location = classpath: git.properties # V? tr� c?a t?p git.properties ?� t?o.
# JMX
spring.jmx.default-domain = # T�n mi?n JMX.
spring.jmx.enabled = true # Ph?i b�y c�c h?t qu?n l� t?i mi?n JMX.
spring.jmx.server = mbeanServer # T�n h?t ??u MBeanServer.
spring.jmx.unique-names = false # C� n�n ??m b?o t�n ??i t??ng th?i gian ch?y duy nh?t hay kh�ng.

# Email (MailProperties)
spring.mail.default-encoding = UTF-8 # M� h�a MimeMessage m?c ??nh.
spring.mail.host = # M�y ch? l?u tr? SMTP. V� d?: `smtp.example.com`.
spring.mail.jndi-name = # T�n phi�n JNDI. Khi ???c ??t, s? ???c ?u ti�n h?n c�c c�i ??t Phi�n kh�c.
spring.mail.password = # M?t kh?u ??ng nh?p c?a m�y ch? SMTP.
spring.mail.port = # C?ng m�y ch? SMTP.
spring.mail.properties. * = # C�c thu?c t�nh JavaMail Session b? sung.
spring.mail.protocol = smtp # Giao th?c ???c s? d?ng b?i m�y ch? SMTP.
spring.mail.test-connection = false # Ki?m tra xem m�y ch? th? c� kh? d?ng khi kh?i ??ng hay kh�ng.
spring.mail.username = # ??ng nh?p ng??i d�ng c?a m�y ch? SMTP.

# APPLICATION SETTINGS (SpringApplication)
spring.main.allow-bean-Definition-overriding = false # Cho ph�p ghi ?� ??nh ngh?a bean, b?ng c�ch ??ng k� m?t ??nh ngh?a c� c�ng t�n v?i m?t ??nh ngh?a hi?n c�, c� ???c ph�p hay kh�ng.
spring.main.banner-mode = console # Ch? ?? d�ng ?? hi?n th? bi?u ng? khi ?ng d?ng ch?y.
spring.main.sources = # Ngu?n (t�n l?p, t�n g�i ho?c v? tr� t�i nguy�n XML) ?? ??a v�o ApplicationContext.
spring.main.web-application-type = # G?n c? ?? y�u c?u r� r�ng m?t lo?i ?ng d?ng web c? th?. N?u kh�ng ???c ??t, s? t? ??ng ph�t hi?n d?a tr�n classpath.
# FILE ENCODING (FileEncodingApplicationListener)
spring.mandatory-file-encoding = # M� h�a k� t? mong ??i m� ?ng d?ng ph?i s? d?ng.

# INTERNATIONALIZATION (MessageSourceProperties)
spring.messages.always-use-message-format = false # C� lu�n �p d?ng c�c quy t?c MessageFormat, ph�n t�ch c� ph�p ngay c? c�c th? kh�ng c� ??i s? hay kh�ng.
spring.messages.basename = messages # Danh s�ch t�n c? s? ???c ph�n t�ch b?ng d?u ph?y (v? c? b?n l� v? tr� classpath ?? ?i?u ki?n), m?i t�n ??u tu�n theo quy ??c ResourceBundle v?i h? tr? tho?i m�i cho c�c v? tr� d?a tr�n d?u g?ch ch�o.
spring.messages.cache-time = # Th?i l??ng b? nh? cache c?a t?p g�i t�i nguy�n ?� t?i. Khi kh�ng ???c ??t, c�c g�i s? ???c l?u v�o b? nh? cache v?nh vi?n. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
spring.messages.encoding = UTF-8 # M� h�a g�i th?.
spring.messages.fallback-to-system-locale = true # C� quay l?i Ng�n ng? h? th?ng hay kh�ng n?u kh�ng t�m th?y t?p cho Ng�n ng? c? th?.
spring.messages.use-code-as-default-message = false # C� s? d?ng m� tin nh?n l�m tin nh?n m?c ??nh thay v� n�m "NoSuchMessageException" hay kh�ng. Ch? ???c ?? xu?t trong qu� tr�nh ph�t tri?n.
# OUTPUT
spring.output.ansi.enabled = detect # ??nh c?u h�nh ??u ra ANSI.

# PID FILE (ApplicationPidFileWriter)
spring.pid.fail-on-write-error = # Kh�ng th�nh c�ng n?u ApplicationPidFileWriter ???c s? d?ng nh?ng n� kh�ng th? ghi t?p PID.
spring.pid.file = # V? tr� c?a t?p PID ?? ghi (n?u s? d?ng ApplicationPidFileWriter).

# PROFILES
spring.profiles.active = # Danh s�ch c�c c?u h�nh ho?t ??ng ???c ph�n t�ch b?ng d?u ph?y. C� th? ???c ghi ?� b?i m?t c�ng t?c d�ng l?nh.
spring.profiles.include = # K�ch ho?t v� ?i?u ki?n danh s�ch c?u h�nh ???c ph�n t�ch b?ng d?u ph?y ?� ch? ??nh (ho?c danh s�ch c?u h�nh n?u s? d?ng YAML).

# QUARTZ SCHEDULER (QuartzProperties)
spring.quartz.auto-startup = true # C� t? ??ng kh?i ??ng b? l?p l?ch sau khi kh?i ch?y hay kh�ng.
spring.quartz.jdbc.comment-prefix = - # Ti?n t? cho nh?n x�t m?t d�ng trong t?p l?nh kh?i t?o SQL.
spring.quartz.jdbc.initialize-schema = nh�ng # Ch? ?? kh?i t?o gi?n ?? c? s? d? li?u.
spring.quartz.jdbc.schema = classpath: org / quartz / impl / jdbcjobstore /boards _ @@ platform @@. sql # ???ng d?n ??n t?p SQL ???c s? d?ng ?? kh?i t?o gi?n ?? c? s? d? li?u.
spring.quartz.job-store-type = memory # Lo?i c?a h�ng c�ng vi?c th?ch anh.
spring.quartz.overwrite-current-Jobs = false # Li?u c�c c�ng vi?c ?� ??nh c?u h�nh c� n�n ghi ?� c�c ??nh ngh?a c�ng vi?c hi?n c� hay kh�ng.
spring.quartz.properties. * = # Thu?c t�nh B? l?p l?ch th?ch anh b? sung.
spring.quartz.scheduler-name = quartzScheduler # T�n c?a b? l?p l?ch.
spring.quartz.startup-delay = 0s # ?? tr? m� sau ?� b? l?p l?ch ???c b?t ??u sau khi qu� tr�nh kh?i t?o ho�n t?t.
spring.quartz.wait-for-Jobs-to-complete-on-shutdown = false # C� ??i ho�n t?t c�c c�ng vi?c ?ang ch?y khi t?t m�y hay kh�ng.
# REACTOR (ReactorCoreProperties)
spring.reactor.stacktrace-mode.enabled = false # Li?u Reactor c� n�n thu th?p th�ng tin stacktrace trong th?i gian ch?y hay kh�ng.

# SENDGRID (SendGridAutoConfiguration)
spring.sendgrid.api-key= # SendGrid API key.
spring.sendgrid.proxy.host= # SendGrid proxy host.
spring.sendgrid.proxy.port= # SendGrid proxy port.

# TASK EXECUTION (TaskExecutionProperties)
spring.task.execution.pool.allow-core-thread-timeout = true # Li?u c�c lu?ng l�i c� ???c ph�p h?t th?i gian ch? hay kh�ng. ?i?u n�y cho ph�p s? ph�t tri?n n?ng ??ng v� thu nh? c?a h? b?i.
spring.task.execution.pool.core-size = 8 # S? c?t l�i c?a ch? ??.
spring.task.execution.pool.keep-lives = 60s # Gi?i h?n th?i gian m� c�c lu?ng c� th? kh�ng ho?t ??ng tr??c khi b? ch?m d?t.
spring.task.execution.pool.max-size = # S? lu?ng cho ph�p t?i ?a. N?u c�c t�c v? ?ang l?p ??y h�ng ??i, nh�m c� th? m? r?ng ??n k�ch th??c ?� ?? ?�p ?ng t?i. B? qua n?u h�ng ??i kh�ng b? gi?i h?n.
spring.task.execution.pool.queue-Capacity = # Dung l??ng h�ng ??i. Dung l??ng kh�ng gi?i h?n kh�ng l�m t?ng nh�m v� do ?� b? qua thu?c t�nh "k�ch th??c t?i ?a".
Spring.task.execution.thread-name-prefix = task- # Ti?n t? ?? s? d?ng cho t�n c?a c�c lu?ng m?i ???c t?o.

# TASK SCHEDULING (TaskSchedulingProperties)
spring.task.scheduling.pool.size=1 # Maximum allowed number of threads.
spring.task.scheduling.thread-name-prefix=scheduling- # Prefix to use for the names of newly created threads.

# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.address = # ??a ch? m?ng m� m�y ch? s? li�n k?t.
server.compression.enabled = false # Li?u n�n ph?n h?i c� ???c b?t hay kh�ng.
server.compression.excluded-user-agent = # Danh s�ch t�c nh�n ng??i d�ng ???c ph�n t�ch b?ng d?u ph?y m� c�c ph?n h?i s? kh�ng ???c n�n.
server.compression.mime-styles = v?n b?n / html, v?n b?n / xml, v?n b?n / tr?n, v?n b?n / css, v?n b?n / javascript, ?ng d?ng / javascript, ?ng d?ng / json, ?ng d?ng / xml # Danh s�ch c�c lo?i MIME ???c ph�n t�ch b?ng d?u ph?y b? n�n.
server.compression.min-response-size = 2KB # Gi� tr? "N?i dung-?? d�i" t?i thi?u c?n thi?t ?? th?c hi?n n�n.
server.connection-timeout = # Th?i gian m� tr�nh k?t n?i ??i m?t y�u c?u HTTP kh�c tr??c khi ?�ng k?t n?i. Khi kh�ng ???c ??t, m?c ??nh d�nh ri�ng cho v�ng ch?a c?a tr�nh k?t n?i s? ???c s? d?ng. S? d?ng gi� tr? -1 ?? bi?u th? th?i gian ch? kh�ng (ngh?a l� v� h?n).
server.error.include-exception = false # Bao g?m thu?c t�nh "ngo?i l?".
server.error.include-stacktrace = never # Khi n�o c?n bao g?m thu?c t�nh "stacktrace".
server.error.path = / error # ???ng d?n c?a b? ?i?u khi?n l?i.
server.error.whitelabel.enabled = true # C� b?t trang l?i m?c ??nh ???c hi?n th? trong tr�nh duy?t trong tr??ng h?p l?i m�y ch? hay kh�ng.
server.http2.enabled = false # C� b?t h? tr? HTTP / 2 hay kh�ng, n?u m�i tr??ng hi?n t?i h? tr? n�.
server.jetty.acceptors = -1 # S? lu?ng ch?p nh?n ?? s? d?ng. Khi gi� tr? l� -1, m?c ??nh, s? b? ch?p nh?n c� ngu?n g?c t? m�i tr??ng ho?t ??ng.
server.jetty.accesslog.append = false # N?i v�o nh?t k�.
server.jetty.accesslog.date-format = dd / MMM / yyyy: HH: mm: ss Z # ??nh d?ng d?u th?i gian c?a nh?t k� y�u c?u.
server.jetty.accesslog.enabled = false # B?t nh?t k� truy c?p.
server.jetty.accesslog.extended-format = false # B?t ??nh d?ng NCSA m? r?ng.
server.jetty.accesslog.file-date-format = # ??nh d?ng ng�y th�ng ?? ??t trong t�n t?p nh?t k�.
server.jetty.accesslog.filename = # T�n t?p nh?t k�. N?u kh�ng ???c ch? ??nh, nh?t k� chuy?n h??ng ??n "System.err".
server.jetty.accesslog.locale = # Ng�n ng? c?a nh?t k� y�u c?u.
server.jetty.accesslog.log-cookies = false # Cho ph�p ghi nh?t k� c�c cookie y�u c?u.
server.jetty.accesslog.log-latency = false # Cho ph�p ghi l?i th?i gian x? l� y�u c?u.
server.jetty.accesslog.log-server = false # B?t ghi nh?t k� t�n m�y ch? y�u c?u.
server.jetty.accesslog.retention-period = 31 # S? ng�y tr??c khi t?p nh?t k� ?� xoay b? x�a.
server.jetty.accesslog.time-zone = GMT # M�i gi? c?a nh?t k� y�u c?u.
server.jetty.max-http-post-size = 200000B # K�ch th??c t?i ?a c?a b�i ??ng HTTP ho?c n?i dung ??a v�o.
server.jetty.selectors = -1 # S? lu?ng b? ch?n s? s? d?ng. Khi gi� tr? l� -1, theo m?c ??nh, s? b? ch?n ???c l?y t? m�i tr??ng ho?t ??ng.
server.max-http-header-size = 8KB # K�ch th??c t?i ?a c?a ti�u ?? th? HTTP.
server.port = 8080 # C?ng HTTP c?a m�y ch?.
server.server-header = # Gi� tr? s? d?ng cho ti�u ?? ph?n h?i M�y ch? (n?u tr?ng, kh�ng c� ti�u ?? n�o ???c g?i).
server.use-forward-headers = # Li?u ti�u ?? X-Forwarded- * c� ???c �p d?ng cho HttpRequest hay kh�ng.
server.servlet.context-parameter. * = # Servlet context init tham s?.
server.servlet.context-path = # ???ng d?n ng? c?nh c?a ?ng d?ng.
server.servlet.application-display-name = application # T�n hi?n th? c?a ?ng d?ng.
server.servlet.jsp.class-name = org.apache.jasper.servlet.JspServlet # T�n l?p c?a servlet ?? s? d?ng cho JSP.
server.servlet.jsp.init-parameter. * = # C�c tham s? Init ???c s? d?ng ?? ??nh c?u h�nh JSP servlet.
server.servlet.jsp.registered = true # Li?u servlet JSP ?� ???c ??ng k� hay ch?a.
server.servlet.session.cookie.comment = # Nh?n x�t cho cookie phi�n.
server.servlet.session.cookie.domain = # Mi?n cho cookie phi�n.
server.servlet.session.cookie.http-only = # C� s? d?ng cookie "HttpOnly" cho cookie phi�n hay kh�ng.
server.servlet.session.cookie.max-age = # Tu?i t?i ?a c?a cookie phi�n. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
server.servlet.session.cookie.name = # T�n cookie phi�n.
server.servlet.session.cookie.path = # ???ng d?n c?a cookie phi�n.
server.servlet.session.cookie.secure = # C� lu�n ?�nh d?u cookie phi�n l� an to�n hay kh�ng.
server.servlet.session.persists = false # C� duy tr� d? li?u phi�n gi?a c�c l?n kh?i ??ng l?i hay kh�ng.
server.servlet.session.store-dir = # Th? m?c d�ng ?? l?u d? li?u phi�n.
server.servlet.session.timeout = 30m # Th?i gian ch? c?a phi�n. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
server.servlet.session.tracking-mode = # Ch? ?? theo d�i phi�n.
server.ssl.ciphers = # M?t m� SSL ???c h? tr?.
server.ssl.client-auth = # Ch? ?? x�c th?c m�y kh�ch.
server.ssl.enabled = true # C� b?t h? tr? SSL hay kh�ng.
server.ssl.enabled-protocols = # Giao th?c SSL ???c b?t.
server.ssl.key-alias = # B� danh x�c ??nh kh�a trong kho kh�a.
server.ssl.key-password = # M?t kh?u ???c s? d?ng ?? truy c?p v�o kh�a trong kho kh�a.
server.ssl.key-store = # ???ng d?n ??n kho kh�a ch?a ch?ng ch? SSL (th??ng l� t?p jks).
server.ssl.key-store-password = # M?t kh?u ???c s? d?ng ?? truy c?p kho kh�a.
server.ssl.key-store-provider = # Nh� cung c?p cho kho kh�a.
server.ssl.key-store-type = # Lo?i kho kh�a.
server.ssl.protocol = Giao th?c TLS # SSL ?? s? d?ng.
server.ssl.trust-store = # C?a h�ng tin c?y gi? ch?ng ch? SSL.
server.ssl.trust-store-password = # M?t kh?u ???c s? d?ng ?? truy c?p kho tin c?y.
server.ssl.trust-store-provider = # Nh� cung c?p cho c?a h�ng tin c?y.
server.ssl.trust-store-type = # Lo?i c?a h�ng tin c?y.
server.tomcat.accept-count = 100 # ?? d�i h�ng ??i t?i ?a cho c�c y�u c?u k?t n?i ??n khi t?t c? c�c lu?ng x? l� y�u c?u c� th? ???c s? d?ng.
server.tomcat.accesslog.buffered = true # C� ??m ??u ra ?? n� ch? ???c x? ??nh k? hay kh�ng.
server.tomcat.accesslog.directory = logs # Th? m?c ch?a t?p nh?t k� ???c t?o. C� th? l� tuy?t ??i ho?c t??ng ??i v?i dir c? s? Tomcat.
server.tomcat.accesslog.enabled = false # B?t nh?t k� truy c?p.
server.tomcat.accesslog.file-date-format = .yyyy-MM-dd # ??nh d?ng ng�y th�ng ?? ??t trong t�n t?p nh?t k�.
server.tomcat.accesslog.pattern = common # M?u ??nh d?ng cho nh?t k� truy c?p.
server.tomcat.accesslog.prefix = access_log # Ti?n t? t�n t?p nh?t k�.
server.tomcat.accesslog.rename-on-rot = false # C� tr� ho�n vi?c ??a d?u ng�y th�ng v�o t�n t?p cho ??n th?i ?i?m xoay v�ng hay kh�ng.
server.tomcat.accesslog.request-properties-enable = false # ??t thu?c t�nh y�u c?u cho ??a ch? IP, T�n m�y ch?, giao th?c v� c?ng ???c s? d?ng cho y�u c?u.
server.tomcat.accesslog.rotate = true # C� b?t t�nh n?ng xoay v�ng nh?t k� truy c?p hay kh�ng.
server.tomcat.accesslog.suffix = .log # H?u t? t�n t?p nh?t k�.
server.tomcat.additional-tld-seek-styles = # Danh s�ch c�c m?u b? sung ???c ph�n t�ch b?ng d?u ph?y kh?p v?i c�c l? c?n b? qua khi qu�t TLD.
server.tomcat.background-processor-delay = 10s # Tr� ho�n gi?a vi?c g?i c�c ph??ng th?c backgroundProcess. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
server.tomcat.basedir = # Tomcat th? m?c c? s?. N?u kh�ng ???c ch? ??nh, m?t th? m?c t?m th?i s? ???c s? d?ng.
server.tomcat.internal-proxies=10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
192\\.168\\.\\d{1,3}\\.\\d{1,3}|\\
169\\.254\\.\\d{1,3}\\.\\d{1,3}|\\
127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
172\\.1[6-9]{1}\\.\\d{1,3}\\.\\d{1,3}|\\
172\\.2[0-9]{1}\\.\\d{1,3}\\.\\d{1,3}|\\
172\\.3[0-1]{1}\\.\\d{1,3}\\.\\d{1,3}\\
0:0:0:0:0:0:0:1\\::1 # Bi?u th?c ch�nh quy kh?p v?i c�c proxy ?�ng tin c?y.
server.tomcat.max-results = 10000 # S? l??ng k?t n?i t?i ?a m� m�y ch? ch?p nh?n v� x? l� t?i b?t k? th?i ?i?m n�o.
server.tomcat.max-http-post-size = 2MB # K�ch th??c t?i ?a c?a n?i dung b�i ??ng HTTP.
server.tomcat.max-nu?t-size = 2MB # L??ng n?i dung y�u c?u t?i ?a ?? nu?t.
server.tomcat.max-thread = 200 # S? l??ng ch? ?? c�ng nh�n t?i ?a.
server.tomcat.min-t�ng-ch? ?? = 10 # S? lu?ng nh�n vi�n t?i thi?u.
server.tomcat.port-header = X-Forwarded-Port # T�n c?a ti�u ?? HTTP ???c s? d?ng ?? ghi ?� gi� tr? c?ng ban ??u.
server.tomcat.protocol-header = # Header ch?a giao th?c ??n, th??ng ???c ??t t�n l� "X-Forwarded-Proto".
server.tomcat.protocol-header-https-value = https # Gi� tr? c?a ti�u ?? giao th?c cho bi?t li?u y�u c?u ??n c� s? d?ng SSL hay kh�ng.
server.tomcat.redirect-context-root = true # Li?u c�c y�u c?u t?i g?c ng? c?nh c� ???c chuy?n h??ng b?ng c�ch th�m a / v�o ???ng d?n hay kh�ng.
server.tomcat.remote-ip-header = # T�n c?a ti�u ?? HTTP m� t? ?� IP t? xa ???c tr�ch xu?t. V� d?: `X-FORWARDED-FOR`.
server.tomcat.resource.allow-caching = true # Li?u b? nh? ??m t�i nguy�n t?nh c� ???c ph�p cho ?ng d?ng web n�y hay kh�ng.
server.tomcat.resource.cache-ttl = # Th?i gian t?n t?i c?a b? ??m t�i nguy�n t?nh.
server.tomcat.uri-encoding = UTF-8 # M� h�a k� t? ?? s? d?ng ?? gi?i m� URI.
server.tomcat.use-relative-redirects = # Li?u ti�u ?? v? tr� HTTP 1.1 tr? l�n ???c t?o b?i l?nh g?i sendRedirect s? s? d?ng chuy?n h??ng t??ng ??i hay tuy?t ??i.
server.undertow.accesslog.dir = # Th? m?c nh?t k� truy c?p Undertow.
server.undertow.accesslog.enabled = false # C� b?t nh?t k� truy c?p hay kh�ng.
server.undertow.accesslog.pattern = common # M?u ??nh d?ng cho nh?t k� truy c?p.
server.undertow.accesslog.prefix = access_log. # Ti?n t? t�n t?p nh?t k�.
server.undertow.accesslog.rotate = true # C� b?t t�nh n?ng xoay v�ng nh?t k� truy c?p hay kh�ng.
server.undertow.accesslog.suffix = log # H?u t? t�n t?p nh?t k�.
server.undertow.buffer-size = # K�ch th??c c?a m?i v�ng ??m.
server.undertow.direct-buffers = # C� ph�n b? b? ??m b�n ngo�i heap Java hay kh�ng. Gi� tr? m?c ??nh ???c l?y t? dung l??ng b? nh? t?i ?a c� s?n cho JVM.
server.undertow.eager-filter-init = true # C� n�n kh?i ch?y b? l?c servlet khi kh?i ??ng hay kh�ng.
server.undertow.io-thread = # S? lu?ng I / O c?n t?o cho worker. Gi� tr? m?c ??nh ???c l?y t? s? l??ng b? x? l� c� s?n.
server.undertow.max-http-post-size = -1B # K�ch th??c t?i ?a c?a n?i dung b�i ??ng HTTP. Khi gi� tr? l� -1, m?c ??nh, k�ch th??c l� kh�ng gi?i h?n.
server.undertow.worker-thread = # S? lu?ng c�ng nh�n. M?c ??nh l� 8 l?n s? lu?ng I / O.

# FREEMARKER (FreeMarkerProperties)
spring.freemarker.allow-request-override = false # Li?u c�c thu?c t�nh HttpServletRequest c� ???c ph�p ghi ?� (?n) c�c thu?c t�nh m� h�nh do b? ?i?u khi?n t?o ra c�ng t�n hay kh�ng.
spring.freemarker.allow-session-override = false # Li?u c�c thu?c t�nh HttpSession c� ???c ph�p ghi ?� (?n) c�c thu?c t�nh m� h�nh do b? ?i?u khi?n t?o ra c� c�ng t�n hay kh�ng.
spring.freemarker.cache = false # C� b?t b? nh? ??m m?u hay kh�ng.
spring.freemarker.charset = UTF-8 # M� h�a m?u.
spring.freemarker.check-template-location = true # Ki?m tra xem v? tr� m?u c� t?n t?i hay kh�ng.
spring.freemarker.content-type = text / html # Gi� tr? Content-Type.
spring.freemarker.enabled = true # C� b?t ?? ph�n gi?i ch? ?? xem MVC cho c�ng ngh? n�y hay kh�ng.
spring.freemarker.expose-request-properties = false # C� n�n th�m t?t c? c�c thu?c t�nh y�u c?u v�o m� h�nh tr??c khi h?p nh?t v?i m?u hay kh�ng.
spring.freemarker.expose-session-properties = false # C� n�n th�m t?t c? c�c thu?c t�nh HttpSession v�o m� h�nh tr??c khi h?p nh?t v?i m?u hay kh�ng.
spring.freemarker.expose-spring-macro-helpers = true # C� hi?n th? RequestContext ?? th? vi?n macro c?a Spring s? d?ng hay kh�ng, d??i t�n "springMacroRequestContext".
spring.freemarker.prefer-file-system-access = true # C� th�ch quy?n truy c?p h? th?ng t?p ?? t?i m?u hay kh�ng. Quy?n truy c?p h? th?ng t?p cho ph�p ph�t hi?n n�ng c�c thay ??i m?u.
spring.freemarker.prefix = # Ti?n t? ???c th�m v�o tr??c ?? xem t�n khi t?o URL.
spring.freemarker.request-context-property = # T�n c?a thu?c t�nh RequestContext cho t?t c? c�c ch? ?? xem.
spring.freemarker.settings. * = # C�c kh�a FreeMarker n?i ti?ng ???c chuy?n ??n C?u h�nh c?a FreeMarker.
spring.freemarker.suffix = .ftl # H?u t? ???c th�m v�o ?? xem t�n khi t?o URL.
spring.freemarker.template-loader-path = classpath: / templates / # Danh s�ch ???ng d?n m?u ???c ph�n t�ch b?ng d?u ph?y.
spring.freemarker.view-names = # Danh s�ch tr?ng c�c t�n ch? ?? xem c� th? ???c gi?i quy?t.

# GROOVY TEMPLATES (GroovyTemplateProperties)
spring.groovy.template.allow-request-override = false # Li?u c�c thu?c t�nh HttpServletRequest c� ???c ph�p ghi ?� (?n) c�c thu?c t�nh m� h�nh do b? ?i?u khi?n t?o ra c�ng t�n hay kh�ng.
spring.groovy.template.allow-session-override = false # Li?u c�c thu?c t�nh HttpSession c� ???c ph�p ghi ?� (?n) c�c thu?c t�nh m� h�nh do b? ?i?u khi?n t?o ra c�ng t�n hay kh�ng.
spring.groovy.template.cache = false # C� b?t b? nh? ??m m?u hay kh�ng.
spring.groovy.template.charset = UTF-8 # M� h�a m?u.
spring.groovy.template.check-template-location = true # Ki?m tra xem v? tr� m?u c� t?n t?i hay kh�ng.
spring.groovy.template.configuration. * = # Xem GroovyMarkupConfigurer
spring.groovy.template.content-type = text / html # Gi� tr? Content-Type.
spring.groovy.template.enabled = true # C� b?t ?? ph�n gi?i ch? ?? xem MVC cho c�ng ngh? n�y hay kh�ng.
spring.groovy.template.expose-request-properties = false # Li?u t?t c? c�c thu?c t�nh y�u c?u c� ???c th�m v�o m� h�nh tr??c khi h?p nh?t v?i m?u hay kh�ng.
spring.groovy.template.expose-session-properties = false # C� n�n th�m t?t c? c�c thu?c t�nh HttpSession v�o m� h�nh tr??c khi h?p nh?t v?i m?u hay kh�ng.
spring.groovy.template.expose-spring-macro-helpers = true # C� hi?n th? RequestContext ?? th? vi?n macro c?a Spring s? d?ng hay kh�ng, d??i t�n "springMacroRequestContext".
spring.groovy.template.prefix = # Ti?n t? ???c th�m v�o tr??c ?? xem t�n khi t?o URL.
spring.groovy.template.request-context-property = # T�n c?a thu?c t�nh RequestContext cho t?t c? c�c ch? ?? xem.
spring.groovy.template.resource-loader-path = classpath: / templates / # ???ng d?n m?u.
spring.groovy.template.suffix = .tpl # H?u t? ???c th�m v�o ?? xem t�n khi t?o URL.
spring.groovy.template.view-names = # Danh s�ch tr?ng c�c t�n ch? ?? xem c� th? ???c gi?i quy?t.

# SPRING HATEOAS (HateoasProperties)
spring.hateoas.use-hal-as-default-json-media-type=true # Whether application/hal+json responses should be sent to requests that accept application/json.

# HTTP (HttpProperties)
spring.http.converters.preferred-json-mapper = # Tr�nh �nh x? JSON ???c ?u ti�n s? d?ng ?? chuy?n ??i th�ng ?i?p HTTP. Theo m?c ??nh, t? ??ng ph�t hi?n theo m�i tr??ng.
spring.http.encoding.charset = UTF-8 # B? m� c?a c�c y�u c?u v� ph?n h?i HTTP. ?� th�m v�o ti�u ?? "Lo?i-N?i dung" n?u kh�ng ???c ??t r� r�ng.
spring.http.encoding.enabled = true # C� b?t h? tr? m� h�a http hay kh�ng.
spring.http.encoding.force = # C� bu?c m� h�a th�nh b? k� t? ?� ??nh c?u h�nh tr�n c�c y�u c?u v� ph?n h?i HTTP hay kh�ng.
spring.http.encoding.force-request = # C� bu?c m� h�a th�nh b? k� t? ?� ??nh c?u h�nh tr�n c�c y�u c?u HTTP hay kh�ng. Gi� tr? m?c ??nh l� true khi "l?c l??ng" ch?a ???c ch? ??nh.
spring.http.encoding.force-response = # C� bu?c m� h�a th�nh b? k� t? ?� ??nh c?u h�nh tr�n ph?n h?i HTTP hay kh�ng.
spring.http.encoding.mapping = # Ng�n ng? ?? m� h�a �nh x?.
spring.http.log-request-details = false # C� cho ph�p ghi nh?t k� chi ti?t y�u c?u (c� th? nh?y c?m) ? c?p DEBUG v� TRACE hay kh�ng.

# MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled = true # C� b?t h? tr? t?i l�n nhi?u ph?n hay kh�ng.
spring.servlet.multipart.file-size-threshold = 0B # Ng??ng sau ?� t?p ???c ghi v�o ??a.
spring.servlet.multipart.location = # V? tr� trung gian c?a c�c t?p ?� t?i l�n.
spring.servlet.multipart.max-file-size = 1MB # K�ch th??c t?p t?i ?a.
spring.servlet.multipart.max-request-size = 10MB # K�ch th??c y�u c?u t?i ?a.
spring.servlet.multipart.resolve-lazily = false # C� gi?i quy?t y�u c?u nhi?u ph?n m?t c�ch l??i bi?ng t?i th?i ?i?m truy c?p t?p ho?c tham s? hay kh�ng.
# JACKSON (JacksonProperties)
spring.jackson.date-format = # Chu?i ??nh d?ng ng�y ho?c t�n l?p ??nh d?ng ng�y ?? ?i?u ki?n. V� d?: `yyyy-MM-dd HH: mm: ss`.
spring.jackson.default-property-inclusive = # Ki?m so�t vi?c bao g?m c�c thu?c t�nh trong qu� tr�nh tu?n t? h�a. ???c ??nh c?u h�nh v?i m?t trong c�c gi� tr? trong ki?u li?t k� JsonInclude.Include c?a Jackson.
spring.jackson.deserialization. * = # Jackson b?t / t?t c�c t�nh n?ng ?nh h??ng ??n c�ch c�c ??i t??ng Java ???c gi?i m�.
spring.jackson.generator. * = # Jackson b?t / t?t c�c t�nh n?ng cho m�y ph�t ?i?n.
spring.jackson.joda-date-time-format = # Chu?i ??nh d?ng ng�y gi? Joda. N?u kh�ng ???c ??nh c?u h�nh, "??nh d?ng ng�y th�ng" ???c s? d?ng l�m d? ph�ng n?u n� ???c ??nh c?u h�nh b?ng m?t chu?i ??nh d?ng.
spring.jackson.locale = # Ng�n ng? ???c s? d?ng ?? ??nh d?ng.
spring.jackson.mapper. * = # T�nh n?ng b?t / t?t m?c ?�ch chung c?a Jackson.
spring.jackson.parser. * = # Jackson b?t / t?t c�c t�nh n?ng cho tr�nh ph�n t�ch c� ph�p.
spring.jackson.property-name-strategy = # M?t trong nh?ng h?ng s? tr�n PropertyNamingStrategy c?a Jackson. C?ng c� th? l� t�n l?p ?? ?i?u ki?n c?a l?p con PropertyNamingStrategy.
spring.jackson.serialization. * = # Jackson b?t / t?t c�c t�nh n?ng ?nh h??ng ??n c�ch c�c ??i t??ng Java ???c tu?n t? h�a.
spring.jackson.time-zone = # M�i gi? ???c s? d?ng khi ??nh d?ng ng�y th�ng. V� d?: "America / Los_Angeles" ho?c "GMT + 10".
spring.jackson.visibility. * = # Jackson c� th? s? d?ng c�c ng??ng hi?n th? ?? gi?i h?n ph??ng th?c (v� tr??ng) n�o ???c t? ??ng ph�t hi?n.

# GSON (GsonProperties)
spring.gson.date-format = # ??nh d?ng ?? s? d?ng khi tu?n t? h�a c�c ??i t??ng Ng�y.
spring.gson.disable-html-Escape = # C� t?t t�nh n?ng tho�t c�c k� t? HTML nh? '<', '>', v.v.
spring.gson.disable-inner-class-serialization = # C� lo?i tr? c�c l?p b�n trong trong qu� tr�nh tu?n t? h�a hay kh�ng.
spring.gson.enable-complex-map-key-serialization = # C� b?t tu?n t? h�a c�c kh�a b?n ?? ph?c t?p hay kh�ng (t?c l� kh�ng ph?i nguy�n th?y).
spring.gson.exclude-fields-without-expose-annotation = # C� lo?i tr? t?t c? c�c tr??ng ?? xem x�t tu?n t? h�a ho?c gi?i m� h�a kh�ng c� ch� th�ch "Expose" hay kh�ng.
spring.gson.field-name-policy = # Ch�nh s�ch ??t t�n s? ???c �p d?ng cho tr??ng c?a ??i t??ng trong qu� tr�nh tu?n t? h�a v� gi?i m� h�a.
spring.gson.generate-non-Operatingable-json = # C� t?o JSON kh�ng th?c thi ???c hay kh�ng b?ng c�ch ??t ti?n t? ??u ra b?ng m?t s? v?n b?n ??c bi?t.
spring.gson.lenient = # C� khoan dung khi ph�n t�ch c� ph�p JSON kh�ng tu�n theo RFC 4627 hay kh�ng.
spring.gson.long-serialization-policy = # Ch�nh s�ch tu?n t? h�a cho c�c lo?i D�i v� d�i.
spring.gson.pretty-print = # C� xu?t ra JSON ???c tu?n t? h�a v?a v?i m?t trang ?? in ??p hay kh�ng.
spring.gson.serialize-nulls = # C� tu?n t? h�a c�c tr??ng null hay kh�ng.

# JERSEY (JerseyProperties)
spring.jersey.application-path = # ???ng d?n ?�ng vai tr� l� URI c? s? cho ?ng d?ng. N?u ???c ch? ??nh, h�y ghi ?� gi� tr? c?a "@ApplicationPath".
spring.jersey.filter.order = 0 # Th? t? chu?i b? l?c Jersey.
spring.jersey.init. * = # Init tham s? ?? chuy?n ??n Jersey th�ng qua servlet ho?c b? l?c.
spring.jersey.servlet.load-on-startup = -1 # T?i v? m?c ?u ti�n kh?i ??ng c?a servlet Jersey.
spring.jersey.type = ki?u t�ch h?p servlet # Jersey.

# SPRING LDAP (LdapProperties)
spring.ldap.anonymous-read-only = false # Li?u c�c ho?t ??ng ch? ??c c� n�n s? d?ng m�i tr??ng ?n danh hay kh�ng.
spring.ldap.base = # H?u t? c? s? m� t?t c? c�c ho?t ??ng s? b?t ngu?n t? ?�.
spring.ldap.base-environment. * = # C�i ??t ??c ?i?m k? thu?t LDAP.
spring.ldap.password = # M?t kh?u ??ng nh?p c?a m�y ch?.
spring.ldap.urls = # URL LDAP c?a m�y ch?.
spring.ldap.username = # T�n ng??i d�ng ??ng nh?p c?a m�y ch?.

# EMBEDDED LDAP (EmbeddedLdapProperties)
spring.ldap.embedded.base-dn = # Danh s�ch c�c DN c? s?.
spring.ldap.embedded.credential.username = # T�n ng??i d�ng LDAP ???c nh�ng.
spring.ldap.embedded.credential.password = # M?t kh?u LDAP ???c nh�ng.
spring.ldap.embedded.ldif = classpath: tham chi?u t�i nguy�n t?p l?nh schema.ldif # Schema (LDIF).
spring.ldap.embedded.port = 0 # C?ng LDAP ???c nh�ng.
spring.ldap.embedded.validation.enabled = true # C� b?t x�c th?c gi?n ?? LDAP hay kh�ng.
spring.ldap.embedded.validation.schema = # ???ng d?n ??n gi?n ?? t�y ch?nh.

# MUSTACHE TEMPLATES (MustacheAutoConfiguration)
spring.mustache.allow-request-override = false # Li?u c�c thu?c t�nh HttpServletRequest c� ???c ph�p ghi ?� (?n) c�c thu?c t�nh m� h�nh do b? ?i?u khi?n t?o ra c�ng t�n hay kh�ng.
spring.mustache.allow-session-override = false # Li?u c�c thu?c t�nh HttpSession c� ???c ph�p ghi ?� (?n) c�c thu?c t�nh m� h�nh do b? ?i?u khi?n t?o ra c� c�ng t�n hay kh�ng.
spring.mustache.cache = false # C� b?t b? nh? ??m m?u hay kh�ng.
spring.mustache.charset = UTF-8 # M� h�a m?u.
spring.mustache.check-template-location = true # Ki?m tra xem v? tr� m?u c� t?n t?i hay kh�ng.
spring.mustache.content-type = text / html # Gi� tr? Content-Type.
spring.mustache.enabled = true # C� b?t ?? ph�n gi?i ch? ?? xem MVC cho c�ng ngh? n�y hay kh�ng.
spring.mustache.expose-request-properties = false # C� n�n th�m t?t c? c�c thu?c t�nh y�u c?u v�o m� h�nh tr??c khi h?p nh?t v?i m?u hay kh�ng.
spring.mustache.expose-session-properties = false # C� n�n th�m t?t c? c�c thu?c t�nh HttpSession v�o m� h�nh tr??c khi h?p nh?t v?i m?u hay kh�ng.
spring.mustache.expose-spring-macro-helpers = true # C� hi?n th? RequestContext ?? th? vi?n macro c?a Spring s? d?ng hay kh�ng, d??i t�n "springMacroRequestContext".
spring.mustache.prefix = classpath: / Template / # Ti?n t? ?? �p d?ng cho t�n m?u.
spring.mustache.request-context-property = # T�n c?a thu?c t�nh RequestContext cho t?t c? c�c d?ng xem.
spring.mustache.suffix = .mustache # H?u t? ?? �p d?ng cho t�n m?u.
spring.mustache.view-names = # Danh s�ch tr?ng c�c t�n ch? ?? xem c� th? ???c gi?i quy?t.

# SPRING MVC (WebMvcProperties)
spring.mvc.async.request-timeout = # Kho?ng th?i gian tr??c khi h?t th?i gian x? l� y�u c?u kh�ng ??ng b?.
spring.mvc.contentnegotiation.favor-parameter = false # C� n�n s? d?ng tham s? y�u c?u ("??nh d?ng" theo m?c ??nh) ?? x�c ??nh lo?i ph??ng ti?n ???c y�u c?u hay kh�ng.
spring.mvc.contentnegotiation.favor-path-extension = false # Li?u ph?n m? r?ng ???ng d?n trong ???ng d?n URL c� ???c s? d?ng ?? x�c ??nh lo?i ph??ng ti?n ???c y�u c?u hay kh�ng.
spring.mvc.contentnegotiation.media-styles. * = # �nh x? ph?n m? r?ng t?p th�nh c�c lo?i ph??ng ti?n ?? th??ng l??ng n?i dung. V� d?: yml th�nh v?n b?n / yaml.
spring.mvc.contentnegotiation.parameter-name = # T�n tham s? truy v?n ?? s? d?ng khi "tham s? ?u ?�i" ???c b?t.
spring.mvc.date-format = # ??nh d?ng ng�y s? s? d?ng. V� d?: `dd / MM / yyyy`.
spring.mvc.dispatch-trace-request = false # C� g?i y�u c?u TRACE t?i ph??ng th?c doService c?a FrameworkServlet hay kh�ng.
spring.mvc.dispatch-options-request = true # C� g?i c�c y�u c?u OPTIONS t?i ph??ng th?c doService c?a FrameworkServlet hay kh�ng.
spring.mvc.favicon.enabled = true # C� b?t ph�n gi?i favicon.ico hay kh�ng.
spring.mvc.formcontent.filter.enabled = true # C� b?t FormContentFilter c?a Spring hay kh�ng.
spring.mvc.hiprismethod.filter.enabled = true # C� b?t Spring's HiddenHttpMethodFilter hay kh�ng.
spring.mvc.ignore-default-model-on-redirect = true # C� n�n b? qua n?i dung c?a m� h�nh "m?c ??nh" trong c�c tr??ng h?p chuy?n h??ng hay kh�ng.
spring.mvc.locale = # Ng�n ng? ?? s? d?ng. Theo m?c ??nh, ng�n ng? n�y ???c ghi ?� b?i ti�u ?? "Ch?p nh?n ng�n ng?".
spring.mvc.locale-Resolutionver = accept-header # X�c ??nh c�ch mi?n ??a ph??ng s? ???c gi?i quy?t.
spring.mvc.log-Resolution-exception = false # C� b?t c?nh b�o ghi nh?t k� c�c ngo?i l? ???c gi?i quy?t b?i "HandlerExceptionResolver" hay kh�ng, ngo?i tr? "DefaultHandlerExceptionResolver".
spring.mvc.message-Code-Resolutionver-format = # Chi?n l??c ??nh d?ng cho m� tin nh?n. V� d?: `PREFIX_ERROR_CODE`.
spring.mvc.pathmatch.use-register-anal-pattern = false # Li?u ??i s�nh m?u h?u t? ch? ho?t ??ng v?i c�c ti?n �ch m? r?ng ???c ??ng k� v?i "spring.mvc.contentnegotiation.media-styles. *" hay kh�ng.
spring.mvc.pathmatch.use -fix-pattern = false # C� s? d?ng ??i s�nh m?u h?u t? (". *") khi ??i s�nh m?u v?i y�u c?u hay kh�ng.
spring.mvc.servlet.load-on-startup = -1 # T?i v? m?c ?u ti�n kh?i ??ng c?a servlet ?i?u ph?i.
spring.mvc.servlet.path = / # ???ng d?n c?a servlet ?i?u ph?i.
spring.mvc.static-path-pattern = / ** # M?u ???ng d?n ???c s? d?ng cho t�i nguy�n t?nh.
spring.mvc.throw-exception-if-no-handler-found = false # C� n�n n�m "NoHandlerFoundException" hay kh�ng n?u kh�ng t�m th?y Handler ?? x? l� y�u c?u.
spring.mvc.view.prefix = # Ti?n t? ch? ?? xem Spring MVC.
spring.mvc.view.suffix = # H?u t? ch? ?? xem Spring MVC.

# SPRING RESOURCES HANDLING (ResourceProperties)
spring.resources.add-mappings = true # C� b?t x? l� t�i nguy�n m?c ??nh hay kh�ng.
spring.resources.cache.cachecontrol.cache-private = # Cho bi?t r?ng th�ng b�o ph?n h?i d�nh cho m?t ng??i d�ng duy nh?t v� kh�ng ???c l?u tr? b?ng b? nh? ??m d�ng chung.
spring.resources.cache.cachecontrol.cache-public = # Ch? ra r?ng b?t k? b? ??m n�o c?ng c� th? l?u ph?n h?i.
spring.resources.cache.cachecontrol.max-age = # Th?i gian t?i ?a ph?n h?i s? ???c l?u v�o b? nh? cache, t�nh b?ng gi�y n?u kh�ng c� h?u t? th?i l??ng n�o kh�ng ???c ch? ??nh.
spring.resources.cache.cachecontrol.must-revalidate = # Cho bi?t r?ng m?t khi n� ?� c?, b? ??m ?n kh�ng ???c s? d?ng ph?n h?i m� kh�ng x�c nh?n l?i n� v?i m�y ch?.
spring.resources.cache.cachecontrol.no-cache = # Cho bi?t r?ng ph?n h?i ?� l?u trong b? nh? cache ch? c� th? ???c s? d?ng l?i n?u ???c x�c th?c l?i v?i m�y ch?.
spring.resources.cache.cachecontrol.no-store = # Ch? ??nh kh�ng l?u ph?n h?i v�o b? nh? cache trong m?i tr??ng h?p.
spring.resources.cache.cachecontrol.no -formation = # Ch? ra c�c b�n trung gian (b? nh? ??m v� c�c b�n kh�c) r?ng h? kh�ng n�n chuy?n ??i n?i dung ph?n h?i.
spring.resources.cache.cachecontrol.proxy-revalidate = # C� c�ng � ngh?a v?i ch? th? "ph?i x�c th?c l?i", ngo?i tr? n� kh�ng �p d?ng cho c�c b? nh? ??m ri�ng.
spring.resources.cache.cachecontrol.s-max-age = # Th?i gian t?i ?a ph?n h?i s? ???c l?u v�o b? nh? ??m d�ng chung, t�nh b?ng gi�y n?u kh�ng c� h?u t? th?i l??ng n�o kh�ng ???c ch? ??nh.
spring.resources.cache.cachecontrol.stale-if-error = # Th?i gian t?i ?a ph?n h?i c� th? ???c s? d?ng khi g?p l?i, t�nh b?ng gi�y n?u kh�ng c� h?u t? th?i l??ng kh�ng ???c ch? ??nh.
spring.resources.cache.cachecontrol.stale-while-revalidate = # Th?i gian t?i ?a ph?n h?i c� th? ???c cung c?p sau khi n� tr? n�n c?, t�nh b?ng gi�y n?u kh�ng c� h?u t? th?i l??ng n�o kh�ng ???c ch? ??nh.
spring.resources.cache.period = # Kho?ng th?i gian l?u trong b? nh? cache cho c�c t�i nguy�n ???c cung c?p b?i tr�nh x? l� t�i nguy�n. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
spring.resources.chain.cache = true # C� b?t b? nh? ??m trong Chu?i t�i nguy�n hay kh�ng.
spring.resources.chain.compressed = false # C� b?t ph�n gi?i t�i nguy�n ?� ???c n�n (gzip, brotli) hay kh�ng.
spring.resources.chain.enabled = # C� b?t chu?i X? l� T�i nguy�n M�a xu�n hay kh�ng. Theo m?c ??nh, b? v� hi?u tr? khi �t nh?t m?t chi?n l??c ?� ???c b?t.
spring.resources.chain.html-application-cache = false # C� b?t ghi l?i t?p k� khai b? ??m ?ng d?ng HTML5 hay kh�ng.
spring.resources.chain.strategy.content.enabled = false # C� b?t Chi?n l??c Phi�n b?n n?i dung hay kh�ng.
spring.resources.chain.strategy.content.paths = / ** # Danh s�ch c�c m?u ???c ph�n t�ch b?ng d?u ph?y ?? �p d?ng cho Chi?n l??c Phi�n b?n n?i dung.
spring.resources.chain.strategy.fixed.enabled = false # C� b?t Chi?n l??c phi�n b?n c? ??nh hay kh�ng.
spring.resources.chain.strategy.fixed.paths = / ** # Danh s�ch c�c m?u ???c ph�n t�ch b?ng d?u ph?y ?? �p d?ng cho Chi?n l??c phi�n b?n c? ??nh.
spring.resources.chain.strategy.fixed.version = # Chu?i phi�n b?n ?? s? d?ng cho Chi?n l??c phi�n b?n c? ??nh.
spring.resources.static-locations = classpath: / META-INF / resources /, classpath: / resources /, classpath: / static /, classpath: / public / # V? tr� c?a t�i nguy�n t?nh.

# SPRING SESSION (SessionProperties)
spring.session.store-type = # Lo?i c?a h�ng phi�n.
spring.session.timeout = # Th?i gian ch? c?a phi�n. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
spring.session.servlet.filter-order = -2147483598 # Th? t? b? l?c kho l?u tr? phi�n.
spring.session.servlet.filter-dispatcher-styles = async, error, request # C�c lo?i ?i?u ph?i b? l?c kho l?u tr? phi�n.
# SPRING SESSION HAZELCAST (HazelcastSessionProperties)
spring.session.hazelcast.flush-mode = on-save # Sessions flush mode.
spring.session.hazelcast.map-name = spring: session: session # T�n c?a b?n ?? ???c s? d?ng ?? l?u tr? c�c phi�n.

# SPRING SESSION JDBC (JdbcSessionProperties)

spring.session.jdbc.cleanup-cron = 0 * * * * * # Bi?u th?c cron cho c�ng vi?c d?n d?p phi�n ?� h?t h?n.
spring.session.jdbc.initialize-schema = nh�ng # Ch? ?? kh?i t?o gi?n ?? c? s? d? li?u.
spring.session.jdbc.schema = classpath: org / springframework / session / jdbc / schema - @@ platform @@. sql # ???ng d?n ??n t?p SQL ???c s? d?ng ?? kh?i t?o gi?n ?? c? s? d? li?u.
spring.session.jdbc.table-name = SPRING_SESSION # T�n c?a b?ng c? s? d? li?u ???c s? d?ng ?? l?u tr? c�c phi�

# SPRING SESSION MONGODB (MongoSessionProperties)
spring.session.mongodb.collection-name = session # T�n b? s?u t?p ???c s? d?ng ?? l?u tr? c�c phi�n.

# SPRING SESSION REDIS (RedisSessionProperties)
spring.session.redis.cleanup-cron = 0 * * * * * # Bi?u th?c Cron cho c�ng vi?c d?n d?p phi�n ?� h?t h?n.
spring.session.redis.flush-mode = on-save # Sessions flush mode.
spring.session.redis.namespace = spring: session # Kh�ng gian t�n cho c�c kh�a ???c s? d?ng ?? l?u tr? c�c phi�n.

# THYMELEAF (ThymeleafAutoConfiguration)
spring.thymeleaf.cache = true # C� b?t b? nh? ??m m?u hay kh�ng.
spring.thymeleaf.check-template = true # Ki?m tra xem m?u c� t?n t?i hay kh�ng tr??c khi hi?n th?.
spring.thymeleaf.check-template-location = true # Ki?m tra xem v? tr� m?u c� t?n t?i hay kh�ng.
spring.thymeleaf.enabled = true # C� b?t ?? ph�n gi?i ch? ?? xem Thymeleaf cho c�c khu�n kh? Web hay kh�ng.
spring.thymeleaf.enable-spring-el-compiler = false # B?t tr�nh bi�n d?ch SpringEL trong bi?u th?c SpringEL.
spring.thymeleaf.encoding = UTF-8 # M� h�a t?p m?u.
spring.thymeleaf.excluded-view-names = # Danh s�ch t�n khung nh�n ???c ph�n t�ch b?ng d?u ph?y (???c ph�p s? d?ng m?u) c?n ???c lo?i tr? kh?i ?? ph�n gi?i.
spring.thymeleaf.mode = HTML # Ch? ?? m?u ???c �p d?ng cho c�c m?u. Xem th�m enum TemplateMode c?a Thymeleaf.
spring.thymeleaf.prefix = classpath: / templates / # Ti?n t? ???c th�m v�o tr??c ?? xem t�n khi t?o URL.
spring.thymeleaf.reactive.chunked-mode-view-names = # Danh s�ch t�n khung nh�n ???c ph�n t�ch b?ng d?u ph?y (cho ph�p c�c m?u) s? l� danh s�ch duy nh?t ???c th?c thi ? ch? ?? CHUNKED khi k�ch th??c chunk t?i ?a ???c ??t.
spring.thymeleaf.reactive.full-mode-view-names = # Danh s�ch t�n khung nh�n ???c ph�n t�ch b?ng d?u ph?y (cho ph�p c�c m?u) s? ???c th?c thi ? ch? ?? FULL ngay c? khi k�ch th??c chunk t?i ?a ???c ??t.
spring.thymeleaf.reactive.max-chunk-size = 0B # K�ch th??c t?i ?a c?a b? ??m d? li?u ???c s? d?ng ?? ghi v�o ph?n h?i.
spring.thymeleaf.reactive.media-styles = # Lo?i ph??ng ti?n ???c h? tr? b?i c�ng ngh? ch? ?? xem.
spring.thymeleaf.render-hidden-markers-before-checkboxes = false # Li?u c�c ??u v�o bi?u m?u ?n ?�ng vai tr� l� ?i?m ?�nh d?u cho c�c h?p ki?m c� ???c hi?n th? tr??c ch�nh ph?n t? h?p ki?m hay kh�ng.
spring.thymeleaf.servlet.content-type = text / html # Gi� tr? Content-Type ???c ghi cho ph?n h?i HTTP.
spring.thymeleaf.servlet.produce-part-output-while-processing = true # Li?u Thymeleaf c� n�n b?t ??u ghi t?ng ph?n ??u ra c�ng s?m c�ng t?t hay ??m cho ??n khi qu� tr�nh x? l� m?u k?t th�c.
spring.thymeleaf.suffix = .html # H?u t? ???c th�m v�o ?? xem t�n khi t?o URL.
spring.thymeleaf.template-Resolutionver-order = # Th? t? c?a tr�nh ph�n gi?i m?u trong chu?i.
spring.thymeleaf.view-names = # Danh s�ch t�n khung nh�n ???c ph�n t�ch b?ng d?u ph?y (???c ph�p s? d?ng m?u) c� th? ???c gi?i quy?t.

# SPRING WEBFLUX (WebFluxProperties)
spring.webflux.date-format = # ??nh d?ng ng�y s? s? d?ng. V� d?: `dd / MM / yyyy`.
spring.webflux.hiisedmethod.filter.enabled = true # C� b?t Spring's HiddenHttpMethodFilter hay kh�ng.
spring.webflux.static-path-pattern = / ** # M?u ???ng d?n ???c s? d?ng cho t�i nguy�n t?nh.

# SPRING WEB SERVICES (WebServicesProperties)
spring.webservices.path = / services # ???ng d?n ?�ng vai tr� l� URI c? s? cho c�c d?ch v?.
spring.webservices.servlet.init = # C�c tham s? c?a Servlet init ?? chuy?n ??n Spring Web Services.
spring.webservices.servlet.load-on-startup = -1 # T?i v? m?c ?u ti�n kh?i ??ng c?a servlet Spring Web Services.
spring.webservices.wsdl-domains = # Danh s�ch ???c ph�n t�ch b?ng d?u ph?y c�c v? tr� c?a WSDL v� XSD ?i k�m s? ???c hi?n th? d??i d?ng bean. 

# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# SECURITY (SecurityProperties)
spring.security.filter.order = -100 # Th? t? chu?i b? l?c b?o m?t.
spring.security.filter.dispatcher-styles = async, error, request # Lo?i ?i?u ph?i chu?i b? l?c b?o m?t.
spring.security.user.name = user # T�n ng??i d�ng m?c ??nh.
spring.security.user.password = # M?t kh?u cho t�n ng??i d�ng m?c ??nh.
spring.security.user.roles = # ???c c?p vai tr� cho t�n ng??i d�ng m?c ??nh.

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
spring.security.oauth2.client.provider. * = # Th�ng tin chi ti?t v? nh� cung c?p OAuth.
spring.security.oauth2.client.registration. * = # ??ng k� ?ng d?ng kh�ch OAuth.

# SECURITY OAUTH2 RESOURCE SERVER (OAuth2ResourceServerProperties)
spring.security.oauth2.resourceserver.jwt.jwk-set-uri = # JSON Web Key URI ?? s? d?ng ?? x�c minh m� th�ng b�o JWT.
spring.security.oauth2.resourceserver.jwt.issuer-uri = # URI m� Nh� cung c?p K?t n?i OpenID x�c nh?n l� M� ??nh danh nh� ph�t h�nh.

# ----------------------------------------
# DATA PROPERTIES
# ----------------------------------------

# FLYWAY (FlywayProperties)
spring.flyway.baseline-description = << ???ng c? s? c?a Flyway >> # M� t? ?? g?n th? m?t l??c ?? hi?n c� khi �p d?ng ???ng c? s?.
spring.flyway.baseline-on-migrate = false # C� t? ??ng g?i ???ng c? s? khi di chuy?n l??c ?? kh�ng tr?ng hay kh�ng.
spring.flyway.baseline-version = 1 # Phi�n b?n ?? g?n th? m?t l??c ?? hi?n c� khi th?c thi ???ng c? s?.
spring.flyway.check-location = true # Ki?m tra xem v? tr� t?p l?nh di chuy?n c� t?n t?i hay kh�ng.
spring.flyway.clean-disable = false # C� t?t t�nh n?ng d?n d?p c? s? d? li?u hay kh�ng.
spring.flyway.clean-on-validation-error = false # C� t? ??ng g?i s?ch khi x?y ra l?i x�c th?c hay kh�ng.
spring.flyway.connect-retries = 0 # S? l?n th? l?i t?i ?a khi c? g?ng k?t n?i v?i c? s? d? li?u.
spring.flyway.enabled = true # C� b?t flyway hay kh�ng.
spring.flyway.encoding = UTF-8 # M� h�a di chuy?n SQL.
spring.flyway.group = false # C� nh�m t?t c? c�c di chuy?n ?ang ch? x? l� l?i v?i nhau trong c�ng m?t giao d?ch hay kh�ng khi �p d?ng ch�ng.
spring.flyway.ignore-future-migrations = true # C� b? qua c�c l?n di chuy?n trong t??ng lai khi ??c b?ng l?ch s? l??c ?? hay kh�ng.
spring.flyway.ignore-ignore-migrations = false # C� b? qua c�c di chuy?n b? b? qua khi ??c b?ng l?ch s? l??c ?? hay kh�ng.
spring.flyway.ignore-missing-migrations = false # C� b? qua di chuy?n b? thi?u khi ??c b?ng l?ch s? l??c ?? hay kh�ng.
spring.flyway.ignore-pending-migrations = false # C� b? qua di chuy?n ?ang ch? x? l� khi ??c b?ng l?ch s? l??c ?? hay kh�ng.
spring.flyway.init-sqls = # C�u l?nh SQL ?? th?c thi ?? kh?i t?o m?t k?t n?i ngay sau khi c� ???c n�.
spring.flyway.installed-by = # T�n ng??i d�ng ???c ghi trong b?ng l?ch s? l??c ?? khi ?� �p d?ng di chuy?n.
spring.flyway.locations = classpath: db /igration # V? tr� c?a c�c t?p l?nh di chuy?n. C� th? ch?a tr�nh gi? ch? "{nh� cung c?p}" ??c bi?t ?? s? d?ng c�c v? tr� d�nh ri�ng cho nh� cung c?p.
spring.flyway.mixed = false # C� cho ph�p tr?n c�c c�u l?nh giao d?ch v� kh�ng giao d?ch trong c�ng m?t l?n di chuy?n hay kh�ng.
spring.flyway.out-of-order = false # C� cho ph�p di chuy?n kh�ng theo th? t? hay kh�ng.
spring.flyway.password = # M?t kh?u ??ng nh?p c?a c? s? d? li?u ?? di chuy?n.
spring.flyway.placeholder-prefix = $ {# Ti?n t? c?a tr�nh gi? ch? trong t?p l?nh di chuy?n.
spring.flyway.placeholder-Replace = true # Th?c hi?n thay th? tr�nh gi? ch? trong t?p l?nh di chuy?n.
spring.flyway.placeholder-suffix=} # H?u t? c?a ph?n gi? ch? trong t?p l?nh di chuy?n.
spring.flyway.placeholder = # Tr�nh gi? ch? v� c�c thay th? c?a ch�ng ?? �p d?ng cho c�c t?p l?nh di chuy?n sql.
spring.flyway.repeatable-sql -igration-prefix = R # Ti?n t? t�n t?p ?? di chuy?n SQL c� th? l?p l?i.
spring.flyway.schemas = # T�n l??c ?? do Flyway qu?n l� (ph�n bi?t ch? hoa ch? th??ng).
spring.flyway.skip-default-callbacks = false # C� b? qua c�c l?nh g?i l?i m?c ??nh hay kh�ng. N?u ?�ng, ch? c�c l?nh g?i l?i t�y ch?nh m?i ???c s? d?ng.
spring.flyway.skip-default-Resolutionvers = false # C� b? qua c�c tr�nh ph�n gi?i m?c ??nh hay kh�ng. N?u ?�ng, ch? c�c tr�nh ph�n gi?i t�y ch?nh m?i ???c s? d?ng.
spring.flyway.sql -igration-prefix = V # Ti?n t? t�n t?p cho qu� tr�nh di chuy?n SQL.
spring.flyway.sql-migrate-migrator = __ # D?u ph�n t�ch t�n t?p cho di chuy?n SQL.
spring.flyway.sql-migraixes = .sql # H?u t? t�n t?p cho di chuy?n SQL.
spring.flyway.table = flyway_schema_history # T�n c?a b?ng l?ch s? l??c ?? gi?n ?? s? ???c Flyway s? d?ng.
spring.flyway.target = # Phi�n b?n ?�ch m� vi?c di chuy?n s? ???c xem x�t.
spring.flyway.url = # url JDBC c?a c? s? d? li?u ?? di chuy?n. N?u kh�ng ???c ??t, ngu?n d? li?u ???c ??nh c?u h�nh ch�nh s? ???c s? d?ng.
spring.flyway.user = # ??ng nh?p ng??i d�ng c?a c? s? d? li?u ?? di chuy?n.
spring.flyway.validate-on-migrate = true # C� t? ??ng g?i x�c th?c khi th?c hi?n di chuy?n hay kh�ng.

# LIQUIBASE (LiquibaseProperties)
spring.liquibase.change-log = classpath: /db/changelog/db.changelog-master.yaml # Thay ??i ???ng d?n c?u h�nh nh?t k�.
spring.liquibase.check-change-log-location = true # Ki?m tra xem v? tr� nh?t k� thay ??i c� t?n t?i hay kh�ng.
spring.liquibase.contexts = # Danh s�ch c�c ng? c?nh th?i gian ch?y ???c ph�n t�ch b?ng d?u ph?y ?? s? d?ng.
spring.liquibase.database-change-log-lock-table = DATABASECHANGELOGLOCK # T�n c?a b?ng s? s? d?ng ?? theo d�i vi?c s? d?ng Liquibase ??ng th?i.
spring.liquibase.database-change-log-table = DATABASECHANGELOG # T�n c?a b?ng ???c s? d?ng ?? theo d�i l?ch s? thay ??i.
spring.liquibase.default-schema = # L??c ?? c? s? d? li?u m?c ??nh.
spring.liquibase.drop-first = false # C� b? l??c ?? c? s? d? li?u tr??c hay kh�ng.
spring.liquibase.enabled = true # C� b?t h? tr? Liquibase hay kh�ng.
spring.liquibase.labels = # Danh s�ch c�c nh�n th?i gian ch?y ???c ph�n t�ch b?ng d?u ph?y ?? s? d?ng.
spring.liquibase.liquibase-schema = # L??c ?? ?? s? d?ng cho c�c ??i t??ng Liquibase.
spring.liquibase.liquibase-tablepace = # Tablespace ?? s? d?ng cho c�c ??i t??ng Liquibase.
spring.liquibase.parameters. * = # Thay ??i th�ng s? nh?t k�.
spring.liquibase.password = # M?t kh?u ??ng nh?p c?a c? s? d? li?u ?? di chuy?n.
spring.liquibase.rollback-file = # T?p m� SQL rollback ???c ghi khi c?p nh?t ???c th?c hi?n.
spring.liquibase.test-rollback-on-update = false # C� n�n ki?m tra qu� tr�nh kh�i ph?c tr??c khi th?c hi?n c?p nh?t hay kh�ng.
spring.liquibase.url = # JDBC URL c?a c? s? d? li?u ?? di chuy?n. N?u kh�ng ???c ??t, ngu?n d? li?u ???c ??nh c?u h�nh ch�nh s? ???c s? d?ng.
spring.liquibase.user = # ??ng nh?p ng??i d�ng c?a c? s? d? li?u ?? di chuy?n.

# COUCHBASE (CouchbaseProperties)
spring.couchbase.bootstrap-hosts = # n�t Couchbase (m�y ch? l?u tr? ho?c ??a ch? IP) ?? kh?i ??ng t? ?�.
spring.couchbase.bucket.name = default # T�n c?a nh�m c?n k?t n?i.
spring.couchbase.bucket.password = # M?t kh?u c?a nh�m.
spring.couchbase.env.endpoints.key-value = 1 # S? l??ng ? c?m tr�n m?i n�t ??i v?i d?ch v? kh�a / gi� tr?.
spring.couchbase.env.endpoints.queryservice.min-endpoints = 1 # S? l??ng ? c?m t?i thi?u tr�n m?i n�t.
spring.couchbase.env.endpoints.queryservice.max-endpoints = 1 # S? l??ng ? c?m t?i ?a tr�n m?i n�t.
spring.couchbase.env.endpoints.viewservice.min-endpoints = 1 # S? l??ng ? c?m t?i thi?u tr�n m?i n�t.
spring.couchbase.env.endpoints.viewservice.max-endpoints = 1 # S? l??ng ? c?m t?i ?a tr�n m?i n�t.
spring.couchbase.env.ssl.enabled = # C� b?t h? tr? SSL hay kh�ng. ???c b?t t? ??ng n?u "Kho kh�a" ???c cung c?p tr? khi ???c ch? ??nh kh�c.
spring.couchbase.env.ssl.key-store = # ???ng d?n ??n kho kh�a JVM ch?a c�c ch?ng ch?.
spring.couchbase.env.ssl.key-store-password = # M?t kh?u ???c s? d?ng ?? truy c?p kho kh�a.
spring.couchbase.env.timeouts.connect = 5000ms # Th?i gian ch? k?t n?i nh�m.
spring.couchbase.env.timeouts.key-value = 2500ms # Thao t�c ch?n ???c th?c hi?n tr�n m?t th?i gian ch? kh�a c? th?.
spring.couchbase.env.timeouts.query = 7500ms # N1QL h?t th?i gian ch? ho?t ??ng truy v?n.
spring.couchbase.env.timeouts.socket-connect = 1000ms # H?t th?i gian ch? k?t n?i Socket k?t n?i.
spring.couchbase.env.timeouts.view = 7500ms # H?t th?i gian ch? ho?t ??ng ch? ?? xem th�ng th??ng v� kh�ng gian ??a l�.

# DAO (PersistenceExceptionTranslationAutoConfiguration)
spring.dao.exceptiontranslation.enabled = true # C� b?t PersistenceExceptionTranslationPostProcessor hay kh�ng.

# CASSANDRA (CassandraProperties)
spring.data.cassandra.cluster-name = # T�n c?a c?m Cassandra.
spring.data.cassandra.compression = none # N�n ???c h? tr? b?i giao th?c nh? ph�n Cassandra.
spring.data.cassandra.connect-timeout = # T�y ch?n ? c?m: h?t th?i gian k?t n?i.
spring.data.cassandra.consistency-level = # M?c ?? nh?t qu�n c?a truy v?n.
spring.data.cassandra.contact-points = localhost # ??a ch? n�t c?m.
spring.data.cassandra.fetch-size = # K�ch th??c t�m n?p m?c ??nh c?a truy v?n.
spring.data.cassandra.jmx-enable = false # C� b?t b�o c�o JMX hay kh�ng.
spring.data.cassandra.keyspace-name = # T�n kh�ng gian ph�m ?? s? d?ng.
spring.data.cassandra.port = # C?ng c?a m�y ch? Cassandra.
spring.data.cassandra.password = # M?t kh?u ??ng nh?p c?a m�y ch?.
spring.data.cassandra.pool.heartbeat-period = 30s # Kho?ng th?i gian nh?p tim m� sau ?� tin nh?n ???c g?i tr�n k?t n?i kh�ng ho?t ??ng ?? ??m b?o tin nh?n v?n c�n s?ng. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
spring.data.cassandra.pool.idle-timeout = 120s # Th?i gian ch? kh�ng ho?t ??ng tr??c khi k?t n?i kh�ng ho?t ??ng b? x�a. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
spring.data.cassandra.pool.max-queue-size = 256 # S? l??ng y�u c?u t?i ?a ???c x?p h�ng ??i n?u kh�ng c� k?t n?i.
spring.data.cassandra.pool.pool-timeout = 5000ms # Th?i gian ch? nh�m khi c? g?ng l?y k?t n?i t? nh�m c?a m�y ch?.
spring.data.cassandra.read-timeout = # T�y ch?n ? c?m: h?t th?i gian ??c.
spring.data.cassandra.repositories.type = auto # Lo?i kho l?u tr? Cassandra ?? k�ch ho?t.
spring.data.cassandra.serial-precision-level = # M?c ?? nh?t qu�n c?a chu?i truy v?n.
spring.data.cassandra.schema-action = none # Thao t�c l??c ?? c?n th?c hi?n khi kh?i ??ng.
spring.data.cassandra.ssl = false # B?t h? tr? SSL.
spring.data.cassandra.username = # ??ng nh?p ng??i d�ng c?a m�y ch?.

# DATA COUCHBASE (CouchbaseDataProperties)
spring.data.couchbase.auto-index = false # T? ??ng t?o ch? ?? xem v� ch? m?c.
spring.data.couchbase.consistency = read-your-own-write # T�nh nh?t qu�n �p d?ng theo m?c ??nh cho c�c truy v?n ?� t?o.
spring.data.couchbase.repositories.type = auto # Lo?i kho Couchbase ?? k�ch ho?t.

# ELASTICSEARCH (ElasticsearchProperties)
spring.data.elasticsearch.cluster-name =asticsearch # T�n c?m Elasticsearch.
spring.data.elasticsearch.cluster-node = # Danh s�ch ??a ch? n�t c?m ???c ph�n t�ch b?ng d?u ph?y.
spring.data.elasticsearch.properties. * = # C�c thu?c t�nh b? sung ???c s? d?ng ?? ??nh c?u h�nh m�y kh�ch.
spring.data.elasticsearch.repositories.enabled = true # C� b?t kho Elasticsearch hay kh�ng.

# DATA JDBC
spring.data.jdbc.repositories.enabled = true # C� b?t kho l?u tr? JDBC hay kh�ng.

# DATA LDAP
spring.data.ldap.repositories.enabled = true # C� b?t kho LDAP hay kh�ng.

# MONGODB (MongoProperties)
spring.data.mongodb.authentication-database = # T�n c? s? d? li?u x�c th?c.
spring.data.mongodb.database = # T�n c? s? d? li?u.
spring.data.mongodb.field-name-strategy = # T�n ho�n to�n ?? ?i?u ki?n c?a FieldNamingStrategy ?? s? d?ng.
spring.data.mongodb.grid-fs-database = # T�n c? s? d? li?u GridFS.
spring.data.mongodb.host = # M�y ch? l?u tr? m�y ch? Mongo. Kh�ng th? ??t b?ng URI.
spring.data.mongodb.password = # M?t kh?u ??ng nh?p c?a m�y ch? mongo. Kh�ng th? ??t b?ng URI.
spring.data.mongodb.port = # C?ng m�y ch? Mongo. Kh�ng th? ??t b?ng URI.
spring.data.mongodb.repositories.type = auto # Lo?i kho l?u tr? Mongo ?? k�ch ho?t.
spring.data.mongodb.uri = mongodb: // localhost / test # URI c? s? d? li?u Mongo. Kh�ng th? ??t b?ng m�y ch?, c?ng v� th�ng tin ??ng nh?p.
spring.data.mongodb.username = # ??ng nh?p ng??i d�ng c?a m�y ch? mongo. Kh�ng th? ??t b?ng URI.

# DATA REDIS
spring.data.redis.repositories.enabled = true # C� b?t kho Redis hay kh�ng. 

# NEO4J (Neo4jProperties)
spring.data.neo4j.auto-index = none # Ch? ?? l?p ch? m?c t? ??ng.
spring.data.neo4j.embedded.enabled = true # C� b?t ch? ?? nh�ng kh�ng n?u c� s?n tr�nh ?i?u khi?n nh�ng.
spring.data.neo4j.open-in-view = true # ??ng k� OpenSessionInViewInterceptor. Li�n k?t Phi�n Neo4j v?i chu?i ?? x? l� to�n b? y�u c?u.
spring.data.neo4j.password = # M?t kh?u ??ng nh?p c?a m�y ch?.
spring.data.neo4j.repositories.enabled = true # C� b?t kho l?u tr? Neo4j hay kh�ng.
spring.data.neo4j.uri = # URI ???c tr�nh ?i?u khi?n s? d?ng. T? ??ng ph�t hi?n theo m?c ??nh.
spring.data.neo4j.username = # ??ng nh?p ng??i d�ng c?a m�y ch?.

# DATA REST (RepositoryRestProperties)
spring.data.rest.base-path = # ???ng d?n c? s? ???c Spring Data REST s? d?ng ?? hi?n th? t�i nguy�n kho l?u tr?.
spring.data.rest.default-media-type = # Lo?i n?i dung ?? s? d?ng l�m m?c ??nh khi kh�ng c� n?i dung n�o ???c ch? ??nh.
spring.data.rest.default-page-size = # K�ch th??c m?c ??nh c?a trang.
spring.data.rest.detection-strategy = default # Chi?n l??c s? d?ng ?? x�c ??nh kho l?u tr? n�o b? l?.
spring.data.rest.enable-enum-translate = # C� b?t d?ch gi� tr? enum th�ng qua g�i t�i nguy�n m?c ??nh Spring Data REST hay kh�ng.
spring.data.rest.limit-param-name = # T�n c?a tham s? chu?i truy v?n URL cho bi?t c� bao nhi�u k?t qu? tr? v? c�ng m?t l�c.
spring.data.rest.max-page-size = # K�ch th??c trang t?i ?a.
spring.data.rest.page-param-name = # T�n c?a tham s? chu?i truy v?n URL cho bi?t trang n�o s? tr? v?.
spring.data.rest.return-body-on-create = # C� tr? v? n?i dung ph?n h?i sau khi t?o m?t th?c th? hay kh�ng.
spring.data.rest.return-body-on-update = # C� tr? v? n?i dung ph?n h?i sau khi c?p nh?t m?t th?c th? hay kh�ng.
spring.data.rest.sort-param-name = # T�n c?a tham s? chu?i truy v?n URL cho bi?t h??ng s?p x?p k?t qu?.

# SOLR (SolrProperties)
spring.data.solr.host = http: //127.0.0.1: 8983 / m�y ch? solr # Solr. B? qua n?u "zk-host" ???c ??t.
spring.data.solr.repositories.enabled = true # C� b?t kho l?u tr? Solr hay kh�ng.
spring.data.solr.zk-host = # ??a ch? m�y ch? ZooKeeper ? d?ng HOST: PORT. 

# DATA WEB (SpringDataWebProperties)
spring.data.web.pagable.default-page-size = 20 # M?c ??nh trang k�ch th??c.
spring.data.web.pagable.max-page-size = 2000 # T?i ?a trang k�ch th??c ???c ch?p nh?n.
spring.data.web.pagable.one-indexed-parameter = false # Hi?n th? v� gi? ??nh c�c trang s? m?c ch? d?a tr�n 1 hay kh�ng.
spring.data.web.pagable.page-parameter = page # T�n tham s? trang m?c.
spring.data.web.pagable.prefix = # Chung ti?n t? s? ???c th�m v�o tr??c c�c trang s? tham s? v� trang k�ch th??c.
spring.data.web.pagable.qualifier-delimiter = _ # D?u ph�n c�ch s? ???c s? d?ng gi?a ??nh l??ng v� k�ch th??c thu?c t�nh v� s? trang th?c t?.
spring.data.web.pagable.size-parameter = size # T�n trang k�ch th??c th�ng s?.
spring.data.web.sort.sort-parameter = sort # S?p x?p tham s? t�n.

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.continue-on-error = false # C� d?ng n?u x?y ra l?i khi kh?i t?o c? s? d? li?u.
spring.datasource.data = # Tham chi?u t�i nguy�n t?p l?nh Data (DML).
spring.datasource.data-username = # T�n ng??i d�ng c?a c? s? d? li?u ?? th?c thi c�c t?p l?nh DML (n?u kh�c).
spring.datasource.data-password = # M?t kh?u c?a c? s? d? li?u ?? th?c thi c�c t?p l?nh DML (n?u kh�c).
spring.datasource.dbcp2. * = # Commons C�c c�i ??t c? th? c?a DBCP2
spring.datasource.driver-class-name = # T�n ?? ?i?u ki?n c?a tr�nh ?i?u khi?n JDBC. T? ??ng ph�t hi?n d?a tr�n URL theo m?c ??nh.
spring.datasource.generate-unique-name = false # C� t?o t�n ngu?n d? li?u ng?u nhi�n hay kh�ng.
spring.datasource.hikari. * = # C�i ??t c? th? c?a Hikari
spring.datasource.initialization-mode = nh�ng # Kh?i t?o ngu?n d? li?u b?ng c�c t?p l?nh DDL v� DML c� s?n.
spring.datasource.jmx-enable = false # C� b?t h? tr? JMX hay kh�ng (n?u ???c cung c?p b?i nh�m c? b?n).
spring.datasource.jndi-name = # JNDI v? tr� c?a ngu?n d? li?u. L?p, url, t�n ng??i d�ng v� m?t kh?u b? b? qua khi ???c ??t.
spring.datasource.name = # T�n c?a ngu?n d? li?u. M?c ??nh th�nh "testdb" khi s? d?ng c? s? d? li?u nh�ng.
spring.datasource.password = # M?t kh?u ??ng nh?p c?a c? s? d? li?u.
spring.datasource.platform = all # N?n t?ng ?? s? d?ng trong t?p l?nh DDL ho?c DML (ch?ng h?n nh? l??c ?? - $ {platform} .sql ho?c data - $ {platform} .sql).
spring.datasource.schema = # Tham chi?u t�i nguy�n t?p l?nh l??c ?? (DDL).
spring.datasource.schema-username = # T�n ng??i d�ng c?a c? s? d? li?u ?? th?c thi c�c t?p l?nh DDL (n?u kh�c).
spring.datasource.schema-password = # M?t kh?u c?a c? s? d? li?u ?? th?c thi c�c t?p l?nh DDL (n?u kh�c).
spring.datasource.separator =; # D?u ph�n t�ch c�u l?nh trong c�c t?p l?nh kh?i t?o SQL.
spring.datasource.sql-script-encoding = # M� h�a t?p l?nh SQL.
spring.datasource.tomcat. * = # C�i ??t c? th? cho ngu?n d? li?u Tomcat
spring.datasource.type = # T�n ?? ?i?u ki?n c?a vi?c tri?n khai nh�m k?t n?i ?? s? d?ng. Theo m?c ??nh, n� ???c t? ??ng ph�t hi?n t? classpath.
spring.datasource.url = # URL JDBC c?a c? s? d? li?u.
spring.datasource.username = # T�n ??ng nh?p c?a c? s? d? li?u.
spring.datasource.xa.data-source-class-name = # XA t�n ngu?n d? li?u ?? ?i?u ki?n.
spring.datasource.xa.properties = # Thu?c t�nh ?? chuy?n ??n ngu?n d? li?u XA.

# JEST (Elasticsearch HTTP client) (JestProperties)
spring.elasticsearch.jest.connection-timeout = 3s # Th?i gian ch? k?t n?i.
spring.elasticsearch.jest.multi-threaded = true # C� b?t y�u c?u k?t n?i t? nhi?u lu?ng th?c thi hay kh�ng.
spring.elasticsearch.jest.password = # M?t kh?u ??ng nh?p.
spring.elasticsearch.jest.proxy.host = # M�y ch? proxy m� m�y kh�ch HTTP n�n s? d?ng.
spring.elasticsearch.jest.proxy.port = # C?ng proxy m� m�y kh�ch HTTP n�n s? d?ng.
spring.elasticsearch.jest.read-timeout = 3 gi�y # H?t gi? ??c.
spring.elasticsearch.jest.uris = http: // localhost: 9200 # Danh s�ch c�c phi�n b?n Elasticsearch ???c ph�n t�ch b?ng d?u ph?y ?? s? d?ng.
spring.elasticsearch.jest.username = # T�n ng??i d�ng ??ng nh?p.

# Elasticsearch REST clients (RestClientProperties)
spring.elasticsearch.rest.password = # M?t kh?u th�ng tin x�c th?c.
spring.elasticsearch.rest.uris = http: // localhost: 9200 # Danh s�ch c�c phi�n b?n Elasticsearch ???c ph�n t�ch b?ng d?u ph?y ?? s? d?ng.
spring.elasticsearch.rest.username = # T�n ng??i d�ng th�ng tin ??ng nh?p.

# H2 Web Console (H2ConsoleProperties)
spring.h2.console.enabled = false # C� b?t b?ng ?i?u khi?n hay kh�ng.
spring.h2.console.path = / h2-console # ???ng d?n t?i ?� b?ng ?i?u khi?n kh? d?ng.
spring.h2.console.settings.trace = false # C� b?t ??u ra theo d�i hay kh�ng.
spring.h2.console.settings.web-allow-others = false # C� b?t truy c?p t? xa hay kh�ng.

# InfluxDB (InfluxDbProperties)
spring.influx.password = # M?t kh?u ??ng nh?p.
spring.influx.url = # URL c?a phi�n b?n InfluxDB c?n k?t n?i.
spring.influx.user = # Ng??i d�ng ??ng nh?p.

# JOOQ (JooqProperties)
spring.jooq.sql-dialect = # Ph??ng ng? SQL ?? s? d?ng. T? ??ng ph�t hi?n theo m?c ??nh.

# JDBC (JdbcProperties)
spring.jdbc.template.fetch-size = -1 # S? h�ng s? ???c t�m n?p t? c? s? d? li?u khi c?n th�m h�ng.
spring.jdbc.template.max-rows = -1 # S? h�ng t?i ?a.
spring.jdbc.template.query-timeout = # H?t th?i gian ch? truy v?n. M?c ??nh l� s? d?ng c?u h�nh m?c ??nh c?a tr�nh ?i?u khi?n JDBC. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.data.jpa.repositories.bootstrap-mode = m?c ??nh # ch? ?? Bootstrap cho kho JPA.
spring.data.jpa.repositories.enabled = true # C� b?t kho l?u tr? JPA hay kh�ng.
spring.jpa.database = # C? s? d? li?u ?�ch ?? ho?t ??ng, t? ??ng ph�t hi?n theo m?c ??nh. C� th? ???c ??t theo c�ch kh�c b?ng c�ch s? d?ng thu?c t�nh "databasePlatform".
spring.jpa.database-platform = # T�n c?a c? s? d? li?u ?�ch ?? ho?t ??ng, ???c t? ??ng ph�t hi?n theo m?c ??nh. C� th? ???c thi?t l?p kh�c b?ng c�ch s? d?ng enum "C? s? d? li?u".
spring.jpa.generate-ddl = false # C� kh?i ch?y l??c ?? khi kh?i ??ng hay kh�ng.
spring.jpa.hibernate.ddl-auto = # ch? ?? DDL. ?�y th?c s? l� m?t ph�m t?t cho thu?c t�nh "hibernate.hbm2ddl.auto". M?c ??nh l� "t?o th?" khi s? d?ng c? s? d? li?u nh�ng v� kh�ng ph�t hi?n th?y tr�nh qu?n l� gi?n ?? n�o. N?u kh�ng, m?c ??nh l� "kh�ng".
spring.jpa.hibernate.naming.implicit-strategy = # T�n ho�n to�n ?? ?i?u ki?n c?a chi?n l??c ??t t�n ng?m ??nh.
spring.jpa.hibernate.naming.physical-strategy = # T�n ho�n to�n ?? ?i?u ki?n c?a chi?n l??c ??t t�n v?t l�.
spring.jpa.hibernate.use-new-id-generator-mappings = # C� s? d?ng Tr�nh nh?n d?ng m?i h?n c?a Hibernate cho AUTO, TABLE v� SEQUENCE hay kh�ng.
spring.jpa.mapping-resources = # T�i nguy�n �nh x? (t??ng ???ng v?i c�c m?c nh?p "t?p �nh x?" trong Persence.xml).
spring.jpa.open-in-view = true # ??ng k� OpenEntityManagerInViewInterceptor. Li�n k?t JPA EntityManager v?i lu?ng ?? x? l� to�n b? y�u c?u.
spring.jpa.properties. * = # C�c thu?c t�nh g?c b? sung c?n ??t tr�n nh� cung c?p JPA.
spring.jpa.show-sql = false # C� b?t ghi nh?t k� c�c c�u l?nh SQL hay kh�ng.

# JTA (JtaAutoConfiguration)
spring.jta.enabled = true # C� b?t h? tr? JTA hay kh�ng.
spring.jta.log-dir = # Th? m?c nh?t k� giao d?ch.
spring.jta.transaction-manager-id = # M� ??nh danh duy nh?t c?a ng??i qu?n l� giao d?ch.

# ATOMIKOS (AtomikosProperties)
spring.jta.atomikos.connectionfactory.borrow-connect-timeout = 30 # Th?i gian ch?, t�nh b?ng gi�y, ?? m??n k?t n?i t? nh�m.
spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag = true # C� b? qua c? ?� giao d?ch khi t?o phi�n hay kh�ng.
spring.jta.atomikos.connectionfactory.local-transaction-mode = false # C� mu?n giao d?ch c?c b? hay kh�ng.
spring.jta.atomikos.connectionfactory.maintenance-period = 60 # Th?i gian, t�nh b?ng gi�y, gi?a c�c l?n ch?y chu?i b?o tr� c?a b? b?i.
spring.jta.atomikos.connectionfactory.max-id-time = 60 # Th?i gian, t�nh b?ng gi�y, sau ?� c�c k?t n?i ???c l�m s?ch kh?i b? b?i.
spring.jta.atomikos.connectionfactory.max-life = 0 # Th?i gian, t�nh b?ng gi�y, m?t k?t n?i c� th? ???c g?p l?i tr??c khi b? h?y. 0 bi?u th? kh�ng c� gi?i h?n.
spring.jta.atomikos.connectionfactory.max-pool-size = 1 # K�ch th??c t?i ?a c?a h? b?i.
spring.jta.atomikos.connectionfactory.min-pool-size = 1 # K�ch th??c t?i thi?u c?a h? b?i.
spring.jta.atomikos.connectionfactory.reap-timeout = 0 # Th?i gian ch? g?t, t�nh b?ng gi�y, cho c�c k?t n?i m??n. 0 bi?u th? kh�ng c� gi?i h?n.
spring.jta.atomikos.connectionfactory.unique-resource-name = jmsConnectionFactory # T�n duy nh?t ???c s? d?ng ?? x�c ??nh t�i nguy�n trong qu� tr�nh kh�i ph?c.
spring.jta.atomikos.connectionfactory.xa-connect-factory-class-name = # Tri?n khai XAConnectionFactory theo nh� cung c?p c? th?.
spring.jta.atomikos.connectionfactory.xa-properties = # Thu?c t�nh XA d�nh ri�ng cho nh� cung c?p.
spring.jta.atomikos.datasource.borrow-connect-timeout = 30 # Th?i gian ch?, t�nh b?ng gi�y, ?? m??n k?t n?i t? nh�m.
spring.jta.atomikos.datasource.concurrent-connection-validation = # C� s? d?ng x�c th?c k?t n?i ??ng th?i hay kh�ng.
spring.jta.atomikos.datasource.default-isol-level = # M?c c�ch ly m?c ??nh c?a c�c k?t n?i do nh�m cung c?p.
spring.jta.atomikos.datasource.login-timeout = # Th?i gian ch?, t�nh b?ng gi�y, ?? thi?t l?p k?t n?i c? s? d? li?u.
spring.jta.atomikos.datasource.maintenance-period = 60 # Th?i gian, t�nh b?ng gi�y, gi?a c�c l?n ch?y chu?i b?o tr� c?a pool.
spring.jta.atomikos.datasource.max-id-time = 60 # Th?i gian, t�nh b?ng gi�y, sau ?� c�c k?t n?i ???c d?n d?p kh?i b? b?i.
spring.jta.atomikos.datasource.max-life = 0 # Th?i gian, t�nh b?ng gi�y, m?t k?t n?i c� th? ???c g?p l?i tr??c khi b? h?y. 0 bi?u th? kh�ng c� gi?i h?n.
spring.jta.atomikos.datasource.max-pool-size = 1 # K�ch th??c t?i ?a c?a h? b?i.
spring.jta.atomikos.datasource.min-pool-size = 1 # K�ch th??c t?i thi?u c?a h? b?i.
spring.jta.atomikos.datasource.reap-timeout = 0 # Th?i gian ch? thu ho?ch, t�nh b?ng gi�y, ??i v?i c�c k?t n?i m??n. 0 bi?u th? kh�ng c� gi?i h?n.
spring.jta.atomikos.datasource.test-query = # C�u l?nh ho?c truy v?n SQL ???c s? d?ng ?? x�c th?c k?t n?i tr??c khi tr? v?.
spring.jta.atomikos.datasource.unique-resource-name = dataSource # T�n duy nh?t ???c s? d?ng ?? x�c ??nh t�i nguy�n trong qu� tr�nh kh�i ph?c.
spring.jta.atomikos.datasource.xa-data-source-class-name = # Tri?n khai XAConnectionFactory theo nh� cung c?p c? th?.
spring.jta.atomikos.datasource.xa-properties = # Thu?c t�nh XA d�nh ri�ng cho nh� cung c?p.
spring.jta.atomikos.properties.allow-sub-transaction = true # Ch? ??nh xem c�c giao d?ch ph? c� ???c ph�p hay kh�ng.
spring.jta.atomikos.properties.checkpoint-period = 500 # Kho?ng th?i gian gi?a c�c ?i?m ki?m tra, ???c bi?u th? b?ng s? l?n ghi nh?t k� gi?a hai ?i?m ki?m tra.
spring.jta.atomikos.properties.default-jta-timeout = 10000ms # Th?i gian ch? m?c ??nh cho c�c giao d?ch JTA.
spring.jta.atomikos.properties.default-max-wait-time-on-shutdown = 9223372036854775807 # Vi?c t?t b�nh th??ng (kh�ng b?t bu?c) s? ??i giao d?ch ho�n t?t trong bao l�u.
spring.jta.atomikos.properties.enable-logging = true # C� b?t ghi nh?t k� ??a hay kh�ng.
spring.jta.atomikos.properties.force-shutdown-on-vm-exit = false # Li?u vi?c t?t m�y ?o c� g�y ra vi?c bu?c ph?i t?t l�i giao d?ch hay kh�ng.
spring.jta.atomikos.properties.log-base-dir = # Th? m?c ch?a c�c t?p nh?t k� s? ???c l?u tr?.
spring.jta.atomikos.properties.log-base-name = tmlog # T�n c? s? c?a t?p nh?t k� giao d?ch.
spring.jta.atomikos.properties.max-actives = 50 # S? l??ng giao d?ch ?ang ho?t ??ng t?i ?a.
spring.jta.atomikos.properties.max-timeout = 300000ms # Th?i gian ch? t?i ?a c� th? ???c ph�p cho c�c giao d?ch.
spring.jta.atomikos.properties.recovery.delay = 10000ms # ?? tr? gi?a hai l?n qu�t kh�i ph?c.
spring.jta.atomikos.properties.recovery.forget-orphaned-log-entries-delay = 86400000ms # Tr� ho�n sau ?� qu� tr�nh kh�i ph?c c� th? d?n d?p c�c m?c nh?t k� ('m? c�i') ?ang ch? x? l�.
spring.jta.atomikos.properties.recovery.max-retries = 5 # S? l?n th? l?i ?? th?c hi?n giao d?ch tr??c khi ??a ra ngo?i l?.
spring.jta.atomikos.properties.recovery.retry-period = 10000ms # ?? tr? gi?a c�c l?n th? l?i.
spring.jta.atomikos.properties.serial-jta-transaction = true # C� n�n tham gia c�c giao d?ch ph? khi c� th? kh�ng.
spring.jta.atomikos.properties.service = # Vi?c tri?n khai tr�nh qu?n l� giao d?ch s? ???c b?t ??u.
spring.jta.atomikos.properties.threaded-two-phase-commit = false # C� s? d?ng c�c ch? ?? kh�c nhau (v� ??ng th?i) kh�ng

# BITRONIX
spring.jta.bitronix.connectionfactory.acquire-increment = 1 # S? l??ng k?t n?i c?n t?o khi ph�t tri?n nh�m.
spring.jta.bitronix.connectionfactory.acquisition-period = 1 # Th?i gian, t�nh b?ng gi�y, ??i tr??c khi c? g?ng l?y l?i k?t n?i sau khi k?t n?i kh�ng h?p l?.
spring.jta.bitronix.connectionfactory.acquisition-timeout = 30 # Th?i gian ch?, t�nh b?ng gi�y, ?? c� ???c k?t n?i t? nh�m.
spring.jta.bitronix.connectionfactory.allow-local-transaction = true # Li?u ng??i qu?n l� giao d?ch c� cho ph�p k?t h?p c�c giao d?ch XA v� kh�ng ph?i XA hay kh�ng.
spring.jta.bitronix.connectionfactory.apply-transaction-timeout = false # C� n�n ??t th?i gian ch? giao d?ch tr�n XAResource khi n� ???c tranh th? hay kh�ng.
spring.jta.bitronix.connectionfactory.automatic-enlisting-enable = true # Li?u t�i nguy�n c� n�n ???c s? d?ng v� t? ??ng h?y ni�m y?t hay kh�ng.
spring.jta.bitronix.connectionfactory.cache-producer-Consumer = true # Li?u nh� s?n xu?t v� ng??i ti�u d�ng c� n�n ???c l?u v�o b? nh? ??m hay kh�ng.
spring.jta.bitronix.connectionfactory.class-name = # T�n l?p tri?n khai c? b?n c?a t�i nguy�n XA.
spring.jta.bitronix.connectionfactory.defer-connect-release = true # Li?u nh� cung c?p c� th? ch?y nhi?u giao d?ch tr�n c�ng m?t k?t n?i v� h? tr? xen k? giao d?ch hay kh�ng.
spring.jta.bitronix.connectionfactory.disabled = # Cho d� t�i nguy�n n�y b? v� hi?u h�a, c� ngh?a l� n� t?m th?i b? c?m l?y k?t n?i t? nh�m c?a n�.
spring.jta.bitronix.connectionfactory.driver-properties = # Thu?c t�nh c?n ???c thi?t l?p tr�n tri?n khai c? b?n.
spring.jta.bitronix.connectionfactory.failed = # ?�nh d?u nh� s?n xu?t t�i nguy�n n�y l� kh�ng th�nh c�ng.
spring.jta.bitronix.connectionfactory.ignore-recovery-failed = false # C� n�n b? qua c�c l?i kh�i ph?c hay kh�ng.
spring.jta.bitronix.connectionfactory.max-id-time = 60 # Th?i gian, t�nh b?ng gi�y, sau ?� c�c k?t n?i ???c l�m s?ch kh?i b? b?i.
spring.jta.bitronix.connectionfactory.max-pool-size = 10 # K�ch th??c t?i ?a c?a h? b?i. 0 bi?u th? kh�ng c� gi?i h?n.
spring.jta.bitronix.connectionfactory.min-pool-size = 0 # K�ch th??c t?i thi?u c?a h? b?i.
spring.jta.bitronix.datasource.prepared-statement-cache-size = 0 # K�ch th??c m?c ti�u c?a b? nh? cache c�u l?nh ?� chu?n b?. 0 v� hi?u h�a b? nh? cache.
spring.jta.bitronix.datasource.share-transaction-links = false # Li?u c�c k?t n?i ? tr?ng th�i ACCESSIBLE c� th? ???c chia s? trong ng? c?nh c?a m?t giao d?ch hay kh�ng.
spring.jta.bitronix.datasource.test-query = # C�u l?nh ho?c truy v?n SQL ???c s? d?ng ?? x�c th?c k?t n?i tr??c khi tr? v?.
spring.jta.bitronix.datasource.two-pc-Order-position = 1 # V? tr� m� t�i nguy�n n�y s? ??m nh?n trong qu� tr�nh cam k?t hai giai ?o?n (??u ti�n lu�n l� Integer.MIN_VALUE v� lu�n cu?i c�ng l� Integer.MAX_VALUE).
spring.jta.bitronix.datasource.unique-name = dataSource # T�n duy nh?t ???c s? d?ng ?? x�c ??nh t�i nguy�n trong qu� tr�nh kh�i ph?c.
spring.jta.bitronix.datasource.use-tm-join = true # C� n�n s? d?ng TMJOIN khi kh?i ??ng XAResources hay kh�ng.
spring.jta.bitronix.properties.allow-multiple-lrc = false # C� cho ph�p nhi?u t�i nguy�n LRC ???c s? d?ng v�o c�ng m?t giao d?ch hay kh�ng.
spring.jta.bitronix.properties.asynchronous2-pc = false # C� cho ph�p th?c thi kh�ng ??ng b? cam k?t hai pha hay kh�ng.
spring.jta.bitronix.properties.background-recovery-period-seconds = 60 # Kho?ng th?i gian t�nh b?ng gi�y ?? ch?y qu� tr�nh kh�i ph?c trong n?n.
spring.jta.bitronix.properties.current-node-only-recovery = true # C� ph?c h?i ch? n�t hi?n t?i hay kh�ng.
spring.jta.bitronix.properties.debug-zero-resource-transaction = false # C� ghi l?i vi?c t?o v� cam k?t c�c ng?n x?p l?nh g?i c?a c�c giao d?ch ???c th?c hi?n m� kh�ng c� m?t t�i nguy�n n�o ???c khai th�c hay kh�ng.
spring.jta.bitronix.properties.default-transaction-timeout = 60 # Th?i gian ch? giao d?ch m?c ??nh, t�nh b?ng gi�y.
spring.jta.bitronix.properties.disable-jmx = false # C� b?t h? tr? JMX hay kh�ng.
spring.jta.bitronix.properties.exception-analyzer = # ??t t�n ?? ?i?u ki?n c?a tri?n khai tr�nh ph�n t�ch ngo?i l? ?? s? d?ng.
spring.jta.bitronix.properties.filter-log-status = false # C� b?t t�nh n?ng l?c nh?t k� ?? ch? nh?ng nh?t k� b?t bu?c ???c ghi hay kh�ng.
spring.jta.bitronix.properties.force-batching-enable = true # Li?u l?c l??ng ??a c� ???c x? l� theo l� hay kh�ng.
spring.jta.bitronix.properties.forced-write-enable = true # Li?u c�c b?n ghi c� b? bu?c v�o ??a hay kh�ng.
spring.jta.bitronix.properties.graceful-shutdown-period = 60 # S? gi�y t?i ?a TM ch? c�c giao d?ch ho�n t?t tr??c khi h?y ch�ng v�o th?i gian t?t.
spring.jta.bitronix.properties.jndi-transaction-sync-registry-name = # T�n JNDI c?a TransactionSynchronizationRegistry.
spring.jta.bitronix.properties.jndi-user-transaction-name = # T�n JNDI c?a UserTransaction.
spring.jta.bitronix.properties.journal = disk # T�n c?a t?p ch�. C� th? l� 'disk', 'null' ho?c m?t t�n l?p.
spring.jta.bitronix.properties.log-part1-filename = btm1.tlog # T�n c?a ph?n ??u ti�n c?a t?p ch�.
spring.jta.bitronix.properties.log-part2-filename = btm2.tlog # T�n c?a ph?n th? hai c?a t?p ch�.
spring.jta.bitronix.properties.max-log-size-in-mb = 2 # K�ch th??c t?i ?a t�nh b?ng megabyte c?a c�c ?o?n t?p ch�.
spring.jta.bitronix.properties.resource-configuration-filename = # T�n t?p c?u h�nh ResourceLoader.
spring.jta.bitronix.properties.server-id = # ASCII ID ph?i nh?n d?ng duy nh?t phi�n b?n TM n�y. M?c ??nh l� ??a ch? IP c?a m�y.
spring.jta.bitronix.properties.skip-dirty-logs = false # B? qua c�c m?c nh?t k� giao d?ch b? h?ng.
spring.jta.bitronix.properties.warn-about-zero-resource-transaction = true # C� ghi l?i c?nh b�o cho c�c giao d?ch ???c th?c hi?n m� kh�ng c� m?t ngu?n t�i nguy�n n�o hay kh�ng.

# EMBEDDED MONGODB (EmbeddedMongoProperties)
spring.mongodb.embedded.features = sync_delay # Danh s�ch c�c t�nh n?ng ???c ph�n t�ch b?ng d?u ph?y ?? b?t.
spring.mongodb.embedded.storage.database-dir = # Th? m?c ???c s? d?ng ?? l?u tr? d? li?u.
spring.mongodb.embedded.storage.oplog-size = # K�ch th??c t?i ?a c?a oplog.
spring.mongodb.embedded.storage.repl-set-name = # T�n c?a nh�m b?n sao.
spring.mongodb.embedded.version = 3.5.5 # Phi�n b?n Mongo ?? s? d?ng.

# REDIS (RedisProperties)
spring.redis.cluster.max-redirects = # S? chuy?n h??ng t?i ?a c?n tu�n theo khi th?c hi?n c�c l?nh tr�n to�n c?m.
spring.redis.cluster.nodes = # Danh s�ch c�c c?p "host: port" ???c ph�n t�ch b?ng d?u ph?y ?? kh?i ??ng t? ?�.
spring.redis.database = 0 # Ch? m?c c? s? d? li?u ???c nh� m�y k?t n?i s? d?ng.
spring.redis.url = # URL k?t n?i. Ghi ?� m�y ch?, c?ng v� m?t kh?u. Ng??i d�ng b? b? qua. V� d?: redis: // user: password@example.com: 6379
spring.redis.host = localhost # M�y ch? l?u tr? m�y ch? Redis.
spring.redis.jedis.pool.max-active = 8 # S? l??ng k?t n?i t?i ?a c� th? ???c ph�n b? b?i nh�m t?i m?t th?i ?i?m nh?t ??nh. S? d?ng gi� tr? �m kh�ng gi?i h?n.
spring.redis.jedis.pool.max-id = 8 # S? k?t n?i "nh�n r?i" t?i ?a trong nh�m. S? d?ng gi� tr? �m ?? bi?u th? s? l??ng k?t n?i kh�ng ho?t ??ng kh�ng gi?i h?n.
spring.redis.jedis.pool.max-wait = -1ms # L??ng th?i gian t?i ?a m� ph�n b? k?t n?i s? ch?n tr??c khi ??a ra ngo?i l? khi nh�m c?n ki?t. S? d?ng gi� tr? �m ?? ch?n v� th?i h?n.
spring.redis.jedis.pool.min-idle = 0 # Nh?m m?c ti�u cho s? l??ng k?t n?i kh�ng ho?t ??ng t?i thi?u ?? duy tr� trong nh�m. C�i ??t n�y ch? c� hi?u l?c n?u n� l� t�ch c?c.
spring.redis.lettuce.pool.max-active = 8 # S? l??ng k?t n?i t?i ?a c� th? ???c ph�n b? b?i nh�m t?i m?t th?i ?i?m nh?t ??nh. S? d?ng gi� tr? �m kh�ng gi?i h?n.
spring.redis.lettuce.pool.max-id = 8 # S? k?t n?i "nh�n r?i" t?i ?a trong nh�m. S? d?ng gi� tr? �m ?? bi?u th? s? l??ng k?t n?i kh�ng ho?t ??ng kh�ng gi?i h?n.
spring.redis.lettuce.pool.max-wait = -1ms # L??ng th?i gian t?i ?a m� ph�n b? k?t n?i s? ch?n tr??c khi ??a ra ngo?i l? khi nh�m c?n ki?t. S? d?ng gi� tr? �m ?? ch?n v� th?i h?n.
spring.redis.lettuce.pool.min-id = 0 # Nh?m m?c ti�u cho s? l??ng k?t n?i kh�ng ho?t ??ng t?i thi?u ?? duy tr� trong nh�m. C�i ??t n�y ch? c� hi?u l?c n?u n� l� t�ch c?c.
spring.redis.lettuce.shutdown-timeout = 100ms # Th?i gian ch? t?t m�y.
spring.redis.password = # M?t kh?u ??ng nh?p c?a m�y ch? redis.
spring.redis.port = 6379 # C?ng m�y ch? Redis.
spring.redis.sentinel.master = # T�n c?a m�y ch? Redis.
spring.redis.sentinel.nodes = # Danh s�ch c�c c?p "m�y ch?: c?ng" ???c ph�n t�ch b?ng d?u ph?y.
spring.redis.ssl = false # C� b?t h? tr? SSL hay kh�ng.
spring.redis.timeout = # Th?i gian ch? k?t n?i.

# TRANSACTION (TransactionProperties)
spring.transaction.default-timeout = # Th?i gian ch? giao d?ch m?c ??nh. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
spring.transaction.rollback-on-commit-fail = # C� kh�i ph?c l?i c�c l?i cam k?t hay kh�ng.



# ----------------------------------------
# INTEGRATION PROPERTIES
# ----------------------------------------

# ACTIVEMQ (ActiveMQProperties)
spring.activemq.broker-url = # URL c?a nh� m�i gi?i ActiveMQ. ???c t?o t? ??ng theo m?c ??nh.
spring.activemq.close-timeout = 15s # Th?i gian ch? tr??c khi xem x�t vi?c ?�ng ho�n t?t.
spring.activemq.in-memory = true # Li?u URL c?a nh� m�i gi?i m?c ??nh c� n?m trong b? nh? hay kh�ng. B? qua n?u m?t nh� m�i gi?i r� r�ng ?� ???c ch? ??nh.
spring.activemq.non-block-redelivery = false # C� d?ng g?i tin nh?n tr??c khi g?i l?i tin nh?n t? m?t giao d?ch ???c ho�n nguy�n hay kh�ng. ?i?u n�y ng? � r?ng th? t? tin nh?n kh�ng ???c gi? nguy�n khi t�nh n?ng n�y ???c b?t.
spring.activemq.password = # M?t kh?u ??ng nh?p c?a nh� m�i gi?i.
spring.activemq.send-timeout = 0ms # Th?i gian ch? tin nh?n ???c g?i ?? c� ph?n h?i. ??t n� th�nh 0 ?? ??i m�i m�i.
spring.activemq.user = # Ng??i d�ng ??ng nh?p c?a nh� m�i gi?i.
spring.activemq.packages.trust-all = # C� tin t??ng t?t c? c�c g�i hay kh�ng.
spring.activemq.packages.trusted = # Danh s�ch c�c g�i c? th? ???c ph�n t�ch b?ng d?u ph?y ?? tin c?y (khi kh�ng tin t??ng t?t c? c�c g�i).
spring.activemq.pool.block-if-full = true # C� ch?n khi k?t n?i ???c y�u c?u v� nh�m ?� ??y hay kh�ng. ??t n� th�nh false ?? thay th? "JMSException".
spring.activemq.pool.block-if-full-timeout = -1ms # Kho?ng th?i gian ch?n tr??c khi ??a ra ngo?i l? n?u nh�m v?n ??y.
spring.activemq.pool.enabled = false # Li?u c� n�n t?o JmsPoolConnectionFactory thay v� ConnectionFactory th�ng th??ng hay kh�ng.
spring.activemq.pool.idle-timeout = 30 gi�y # H?t th?i gian ch? k?t n?i.
spring.activemq.pool.max-links = 1 # S? l??ng k?t n?i g?p chung t?i ?a.
spring.activemq.pool.max-session-per-connection = 500 # S? phi�n t?ng h?p t?i ?a cho m?i k?t n?i trong nh�m.
spring.activemq.pool.time-between-expiration-check = -1ms # Th?i gian ng? gi?a c�c l?n ch?y chu?i lo?i b? k?t n?i kh�ng ho?t ??ng. Khi ti�u c?c, kh�ng c� chu?i lo?i b? k?t n?i kh�ng ho?t ??ng.
spring.activemq.pool.use-anonymous-producers = true # C� n�n ch? s? d?ng m?t phi�n b?n "MessageProductioner" ?n danh hay kh�ng. ??t n� th�nh false ?? t?o m?t "MessageProductioner" m?i khi c?n.

# ARTEMIS (ArtemisProperties)
spring.artemis.embedded.cluster-password = # M?t kh?u c?m. ???c t?o ng?u nhi�n khi kh?i ??ng theo m?c ??nh.
spring.artemis.embedded.data-directory = # Th? m?c t?p t?p ch�. Kh�ng c?n thi?t n?u t�nh n?ng li�n t?c b? t?t.
spring.artemis.embedded.enabled = true # C� b?t ch? ?? nh�ng n?u c�c API m�y ch? Artemis c� s?n hay kh�ng.
spring.artemis.embedded.persists = false # C� b?t l?u tr? li�n t?c hay kh�ng.
spring.artemis.embedded.queues = # Danh s�ch c�c h�ng ??i ???c ph�n t�ch b?ng d?u ph?y ?? t?o khi kh?i ??ng.
spring.artemis.embedded.server-id = # ID M�y ch?. Theo m?c ??nh, b? ??m t?ng d?n t? ??ng ???c s? d?ng.
spring.artemis.embedded.topics = # Danh s�ch c�c ch? ?? ???c ph�n t�ch b?ng d?u ph?y ?? t?o khi kh?i ??ng.
spring.artemis.host = localhost # m�y ch? nh� m�i gi?i Artemis.
spring.artemis.mode = # Ch? ?? tri?n khai Artemis, t? ??ng ph�t hi?n theo m?c ??nh.
spring.artemis.password = # M?t kh?u ??ng nh?p c?a nh� m�i gi?i.
spring.artemis.pool.block-if-full = true # C� ch?n khi k?t n?i ???c y�u c?u v� nh�m ?� ??y hay kh�ng. ??t n� th�nh false ?? thay th? "JMSException".
spring.artemis.pool.block-if-full-timeout = -1ms # Kho?ng th?i gian ch?n tr??c khi ??a ra ngo?i l? n?u nh�m v?n ??y.
spring.artemis.pool.enabled = false # Li?u c� n�n t?o JmsPoolConnectionFactory thay v� ConnectionFactory th�ng th??ng hay kh�ng.
spring.artemis.pool.idle-timeout = 30 gi�y # H?t th?i gian ch? k?t n?i.
spring.artemis.pool.max-links = 1 # S? l??ng k?t n?i g?p chung t?i ?a.
spring.artemis.pool.max-session-per-connection = 500 # S? phi�n t?ng h?p t?i ?a cho m?i k?t n?i trong nh�m.
spring.artemis.pool.time-between-expiration-check = -1ms # Th?i gian ng? gi?a c�c l?n ch?y chu?i lo?i b? k?t n?i kh�ng ho?t ??ng. Khi ti�u c?c, kh�ng c� chu?i lo?i b? k?t n?i kh�ng ho?t ??ng.
spring.artemis.pool.use-anonymous-producers = true # C� n�n ch? s? d?ng m?t phi�n b?n "MessageProductioner" ?n danh hay kh�ng. ??t n� th�nh false ?? t?o m?t "MessageProductioner" m?i khi c?n.
spring.artemis.port = 61616 # C?ng m�i gi?i Artemis.
spring.artemis.user = # Ng??i d�ng ??ng nh?p c?a nh� m�i gi?i.

# SPRING BATCH (BatchProperties)
spring.batch.initialize-schema = nh�ng # Ch? ?? kh?i t?o gi?n ?? c? s? d? li?u.
spring.batch.job.enabled = true # Th?c thi t?t c? c�c c�ng vi?c Spring Batch trong ng? c?nh khi kh?i ??ng.
spring.batch.job.names = # Danh s�ch t�n c�ng vi?c ???c ph�n t�ch b?ng d?u ph?y ?? th?c hi?n khi kh?i ??ng (v� d?: `job1, job2`). Theo m?c ??nh, t?t c? c�c C�ng vi?c ???c t�m th?y trong ng? c?nh ??u ???c th?c thi.
spring.batch.schema = classpath: org / springframework / batch / core / schema - @@ platform @@. sql # ???ng d?n ??n t?p SQL s? d?ng ?? kh?i t?o gi?n ?? c? s? d? li?u.
spring.batch.table-prefix = # Ti?n t? b?ng cho t?t c? c�c b?ng si�u d? li?u h�ng lo?t.

# SPRING INTEGRATION (IntegrationProperties)
spring.integration.jdbc.initialize-schema = nh�ng # Ch? ?? kh?i t?o gi?n ?? c? s? d? li?u.
spring.integration.jdbc.schema = classpath: org / springframework / integration / jdbc / schema - @@ platform @@. sql # ???ng d?n ??n t?p SQL ???c s? d?ng ?? kh?i t?o gi?n ?? c? s? d? li?u.

# JMS (JmsProperties)
spring.jms.cache.consumers = false # C� l?u v�o b? nh? cache c?a ng??i ti�u d�ng tin nh?n hay kh�ng.
spring.jms.cache.enabled = true # C� l?u c�c phi�n v�o b? nh? cache hay kh�ng.
spring.jms.cache.producers = true # C� l?u c�c nh� s?n xu?t tin nh?n v�o b? nh? cache hay kh�ng.
spring.jms.cache.session-cache-size = 1 # K�ch th??c c?a b? ??m phi�n (m?i lo?i Phi�n JMS).
spring.jms.jndi-name = # T�n JNDI c?a nh� m�y k?t n?i. Khi ???c ??t, s? ?u ti�n c�c c?u h�nh t? ??ng c?a nh� m�y k?t n?i kh�c.
spring.jms.listener.acknowledge-mode = # Ch? ?? x�c nh?n c?a v�ng ch?a. Theo m?c ??nh, tr�nh nghe ???c giao d?ch b?ng x�c nh?n t? ??ng.
spring.jms.listener.auto-startup = true # Kh?i ??ng v�ng ch?a t? ??ng khi kh?i ??ng.
spring.jms.listener.concurrency = # S? l??ng ng??i ti�u d�ng ??ng th?i t?i thi?u.
spring.jms.listener.max-concurrency = # S? l??ng ng??i ti�u d�ng ??ng th?i t?i ?a.
spring.jms.pub-sub-domain = false # Cho d� lo?i ?�ch m?c ??nh c� ph?i l� ch? ?? hay kh�ng.
spring.jms.template.default-destination = # ?i?m ??n m?c ??nh ?? s? d?ng cho c�c ho?t ??ng g?i v� nh?n kh�ng c� tham s? ?�ch.
spring.jms.template.delivery-delay = # ?? tr? giao h�ng ?? s? d?ng cho c�c cu?c g?i g?i.
spring.jms.template.delivery-mode = # Ch? ?? giao h�ng. B?t QoS (Ch?t l??ng d?ch v?) khi ???c ??t.
spring.jms.template.priosystem = # M?c ?? ?u ti�n c?a m?t tin nh?n khi g?i. B?t QoS (Ch?t l??ng d?ch v?) khi ???c ??t.
spring.jms.template.qos-enable = # C� b?t QoS (Ch?t l??ng d?ch v?) r� r�ng khi g?i tin nh?n hay kh�ng.
spring.jms.template.receive-timeout = # Th?i gian ch? ?? s? d?ng cho c�c cu?c g?i nh?n.
spring.jms.template.time-to-live = # Th?i gian t?n t?i c?a m?t tin nh?n khi g?i. B?t QoS (Ch?t l??ng d?ch v?) khi ???c ??t.

# APACHE KAFKA (KafkaProperties)
spring.kafka.admin.client-id = # ID ?? chuy?n ??n m�y ch? khi th?c hi?n y�u c?u. ???c s? d?ng ?? ghi nh?t k� ph�a m�y ch?.
spring.kafka.admin.fail-fast = false # C� th?t b?i nhanh kh�ng n?u nh� m�i gi?i kh�ng kh? d?ng khi kh?i ??ng.
spring.kafka.admin.properties. * = # C�c thu?c t�nh b? sung d�nh ri�ng cho qu?n tr? vi�n ???c s? d?ng ?? ??nh c?u h�nh m�y kh�ch.
spring.kafka.admin.ssl.key-password = # M?t kh?u c?a kh�a c� nh�n trong t?p l?u tr? kh�a.
spring.kafka.admin.ssl.key-store-location = # V? tr� c?a t?p l?u tr? kh�a.
spring.kafka.admin.ssl.key-store-password = # L?u tr? m?t kh?u cho t?p l?u tr? kh�a.
spring.kafka.admin.ssl.key-store-type = # Lo?i c?a h�ng kh�a.
spring.kafka.admin.ssl.protocol = # Giao th?c SSL ?? s? d?ng.
spring.kafka.admin.ssl.trust-store-location = # V? tr� c?a t?p l?u tr? tin c?y.
spring.kafka.admin.ssl.trust-store-password = # L?u tr? m?t kh?u cho t?p tin l?u tr?.
spring.kafka.admin.ssl.trust-store-type = # Lo?i c?a h�ng tin c?y.
spring.kafka.bootstrap-server = # Danh s�ch c�c c?p m�y ch?: c?ng ???c ph�n t�ch b?ng d?u ph?y ?? s? d?ng ?? thi?t l?p c�c k?t n?i ban ??u ??n c?m Kafka. �p d?ng cho t?t c? c�c th�nh ph?n tr? khi b? ghi ?�.
spring.kafka.client-id = # ID ?? chuy?n ??n m�y ch? khi th?c hi?n y�u c?u. ???c s? d?ng ?? ghi nh?t k� ph�a m�y ch?.
spring.kafka.consumer.auto-commit-period = # T?n su?t m� ph?n b� c?a ng??i ti�u d�ng ???c t? ??ng cam k?t v?i Kafka n?u 'enable.auto.commit' ???c ??t th�nh true.
spring.kafka.consumer.auto-offset-reset = # Ph?i l�m g� khi kh�ng c� kho?ng b� ban ??u trong Kafka ho?c n?u kho?ng b� hi?n t?i kh�ng c�n t?n t?i tr�n m�y ch?.
spring.kafka.consumer.bootstrap-server = # Danh s�ch c�c c?p m�y ch?: c?ng ???c ph�n t�ch b?ng d?u ph?y ?? s? d?ng ?? thi?t l?p c�c k?t n?i ban ??u ??n c?m Kafka. Ghi ?� t�i s?n to�n c?u, d�nh cho ng??i ti�u d�ng.
spring.kafka.consumer.client-id = # ID ?? chuy?n ??n m�y ch? khi th?c hi?n y�u c?u. ???c s? d?ng ?? ghi nh?t k� ph�a m�y ch?.
spring.kafka.consumer.enable-auto-commit = # Li?u ph?n b� c?a ng??i ti�u d�ng c� ???c cam k?t ??nh k? trong n?n hay kh�ng.
spring.kafka.consumer.fetch-max-wait = # L??ng th?i gian t?i ?a m�y ch? ch?n tr??c khi tr? l?i y�u c?u t�m n?p n?u kh�ng c� ?? d? li?u ?? ?�p ?ng ngay y�u c?u do "fetch-min-size" ??a ra.
spring.kafka.consumer.fetch-min-size = # L??ng d? li?u t?i thi?u m� m�y ch? ph?i tr? v? cho m?t y�u c?u t�m n?p.
spring.kafka.consumer.group-id = # Chu?i duy nh?t x�c ??nh nh�m ng??i ti�u d�ng m� ng??i ti�u d�ng n�y thu?c v?.
spring.kafka.consumer.heartbeat-period = # Th?i gian mong ??i gi?a c�c nh?p tim ??n ?i?u ph?i vi�n ti�u d�ng.
spring.kafka.consumer.key-deserializer = # L?p g? r?i cho c�c kh�a.
spring.kafka.consumer.max-max-poll-records = # S? b?n ghi t?i ?a ???c tr? v? trong m?t l?n g?i th?m d� � ki?n ??().
spring.kafka.consumer.properties. * = # C�c thu?c t�nh b? sung d�nh ri�ng cho ng??i ti�u d�ng ???c s? d?ng ?? ??nh c?u h�nh ?ng d?ng kh�ch.
spring.kafka.consumer.ssl.key-password = # M?t kh?u c?a kh�a c� nh�n trong t?p l?u tr? kh�a.
spring.kafka.consumer.ssl.key-store-location = # V? tr� c?a t?p l?u tr? kh�a.
spring.kafka.consumer.ssl.key-store-password = # L?u tr? m?t kh?u cho t?p l?u tr? kh�a.
spring.kafka.consumer.ssl.key-store-type = # Lo?i c?a h�ng kh�a.
spring.kafka.consumer.ssl.protocol = # Giao th?c SSL ?? s? d?ng.
spring.kafka.consumer.ssl.trust-store-location = # V? tr� c?a t?p l?u tr? tin c?y.
spring.kafka.consumer.ssl.trust-store-password = # M?t kh?u l?u tr? cho t?p tin l?u tr?.
spring.kafka.consumer.ssl.trust-store-type = # Lo?i c?a h�ng tin c?y.
spring.kafka.consumer.value-deserializer = # L?p Deserializer cho c�c gi� tr?.
spring.kafka.jaas.control-flag = Required # C? ?i?u khi?n cho c?u h�nh ??ng nh?p.
spring.kafka.jaas.enabled = false # C� b?t c?u h�nh JAAS hay kh�ng.
spring.kafka.jaas.login-module = com.sun.security.auth.module.Krb5LoginModule # ??ng nh?p m�-?un.
spring.kafka.jaas.options = # T�y ch?n JAAS b? sung.
spring.kafka.listener.ack-count = # S? b?n ghi gi?a c�c cam k?t b� tr? khi ackMode l� "COUNT" ho?c "COUNT_TIME".
spring.kafka.listener.ack-mode = # Listener AckMode. Xem t�i li?u spring-kafka.
spring.kafka.listener.ack-time = # Th?i gian gi?a c�c l?n cam k?t b� khi ackMode l� "TIME" ho?c "COUNT_TIME".
spring.kafka.listener.client-id = # Ti?n t? cho thu?c t�nh client.id c?a ng??i nghe.
spring.kafka.listener.concurrency = # S? lu?ng s? ch?y trong v�ng ch?a tr�nh l?ng nghe.
spring.kafka.listener.idle-event-period = # Th?i gian gi?a c�c l?n xu?t b?n c�c s? ki?n kh�ng ho?t ??ng c?a ng??i ti�u d�ng (kh�ng nh?n ???c d? li?u).
spring.kafka.listener.log-container-config = # C� ghi l?i c?u h�nh v�ng ch?a trong qu� tr�nh kh?i t?o hay kh�ng (m?c INFO).
spring.kafka.listener.monitor-interval = # Th?i gian gi?a c�c l?n ki?m tra ng??i ti�u d�ng kh�ng ph?n h?i. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
spring.kafka.listener.no-poll-threshold = # H? s? nh�n ???c �p d?ng cho "th?i gian tr? l?i" ?? x�c ??nh xem ng??i ti�u d�ng c� ph?n ?ng kh�ng.
spring.kafka.listener.poll-timeout = # Th?i gian ch? ?? s? d?ng khi th?m d� � ki?n kh�ch h�ng.
spring.kafka.listener.type = lo?i tr�nh nghe # ??n.
spring.kafka.producer.acks = # S? l??ng x�c nh?n m� nh� s?n xu?t y�u c?u ng??i l�nh ??o ph?i nh?n tr??c khi xem x�t y�u c?u ho�n t?t.
spring.kafka.producer.batch-size = # K�ch th??c l� m?c ??nh.
spring.kafka.producer.bootstrap-server = # Danh s�ch c�c c?p m�y ch?: c?ng ???c ph�n t�ch b?ng d?u ph?y ?? s? d?ng ?? thi?t l?p c�c k?t n?i ban ??u ??n c?m Kafka. Ghi ?� t�i s?n to�n c?u, d�nh cho nh� s?n xu?t.
spring.kafka.producer.buffer-memory = # T?ng dung l??ng b? nh? m� nh� s?n xu?t c� th? s? d?ng ?? ??m c�c b?n ghi ?ang ch? ???c g?i ??n m�y ch?.
spring.kafka.producer.client-id = # ID ?? chuy?n ??n m�y ch? khi th?c hi?n y�u c?u. ???c s? d?ng ?? ghi nh?t k� ph�a m�y ch?.
spring.kafka.producer.compression-type = # Lo?i n�n cho t?t c? d? li?u ???c t?o b?i nh� s?n xu?t.
spring.kafka.producer.key-serializer = # L?p n?i ti?p cho c�c kh�a.
spring.kafka.producer.properties. * = # C�c thu?c t�nh b? sung d�nh ri�ng cho nh� s?n xu?t ???c s? d?ng ?? ??nh c?u h�nh ?ng d?ng kh�ch.
spring.kafka.producer.retries = # Khi l?n h?n 0, cho ph�p th? l?i c�c l?n g?i kh�ng th�nh c�ng.
spring.kafka.producer.ssl.key-password = # M?t kh?u c?a kh�a c� nh�n trong t?p l?u tr? kh�a.
spring.kafka.producer.ssl.key-store-location = # V? tr� c?a t?p l?u tr? kh�a.
spring.kafka.producer.ssl.key-store-password = # L?u tr? m?t kh?u cho t?p l?u tr? kh�a.
spring.kafka.producer.ssl.key-store-type = # Lo?i c?a h�ng kh�a.
spring.kafka.producer.ssl.protocol = # Giao th?c SSL ?? s? d?ng.
spring.kafka.producer.ssl.trust-store-location = # V? tr� c?a t?p l?u tr? tin c?y.
spring.kafka.producer.ssl.trust-store-password = # M?t kh?u l?u tr? cho t?p tin l?u tr?.
spring.kafka.producer.ssl.trust-store-type = # Lo?i c?a h�ng tin c?y.
spring.kafka.producer.transaction-id-prefix = # Khi kh�ng tr?ng, b?t h? tr? giao d?ch cho nh� s?n xu?t.
spring.kafka.producer.value-serializer = # L?p n?i ti?p cho c�c gi� tr?.
spring.kafka.properties. * = # Thu?c t�nh b? sung, chung cho ng??i s?n xu?t v� ng??i ti�u d�ng, ???c s? d?ng ?? ??nh c?u h�nh ?ng d?ng kh�ch.
spring.kafka.ssl.key-password = # M?t kh?u c?a kh�a c� nh�n trong t?p l?u tr? kh�a.
spring.kafka.ssl.key-store-location = # V? tr� c?a t?p l?u tr? kh�a.
spring.kafka.ssl.key-store-password = # L?u tr? m?t kh?u cho t?p l?u tr? kh�a.
spring.kafka.ssl.key-store-type = # Lo?i c?a h�ng kh�a.
spring.kafka.ssl.protocol = # Giao th?c SSL ?? s? d?ng.
spring.kafka.ssl.trust-store-location = # V? tr� c?a t?p l?u tr? tin c?y.
spring.kafka.ssl.trust-store-password = # L?u tr? m?t kh?u cho t?p tin l?u tr?.
spring.kafka.ssl.trust-store-type = # Lo?i c?a h�ng ?y th�c.
spring.kafka.streams.application-id = # Kafka d�ng thu?c t�nh application.id; m?c ??nh spring.application.name.
spring.kafka.streams.auto-startup = true # C� t? ??ng kh?i ??ng bean nh� m�y lu?ng hay kh�ng.
spring.kafka.streams.bootstrap-server = # Danh s�ch c�c c?p m�y ch?: c?ng ???c ph�n t�ch b?ng d?u ph?y ?? s? d?ng ?? thi?t l?p c�c k?t n?i ban ??u t?i c?m Kafka. Ghi ?� thu?c t�nh to�n c?u cho lu?ng.
spring.kafka.streams.cache-max-size-buffering = # K�ch th??c b? nh? t?i ?a ???c s? d?ng ?? ??m tr�n t?t c? c�c lu?ng.
spring.kafka.streams.client-id = # ID ?? chuy?n ??n m�y ch? khi th?c hi?n y�u c?u. ???c s? d?ng ?? ghi nh?t k� ph�a m�y ch?.
spring.kafka.streams.properties. * = # Thu?c t�nh Kafka b? sung ???c s? d?ng ?? ??nh c?u h�nh c�c lu?ng.
spring.kafka.streams.replication-factor = # Y?u t? nh�n b?n cho c�c ch? ?? nh?t k� thay ??i v� c�c ch? ?? ph�n v�ng l?i ???c t?o b?i ?ng d?ng x? l� lu?ng.
spring.kafka.streams.ssl.key-password = # M?t kh?u c?a kh�a c� nh�n trong t?p l?u tr? kh�a.
spring.kafka.streams.ssl.key-store-location = # V? tr� c?a t?p l?u tr? kh�a.
spring.kafka.streams.ssl.key-store-password = # L?u tr? m?t kh?u cho t?p l?u tr? kh�a.
spring.kafka.streams.ssl.key-store-type = # Lo?i c?a h�ng kh�a.
spring.kafka.streams.ssl.protocol = # Giao th?c SSL ?? s? d?ng.
spring.kafka.streams.ssl.trust-store-location = # V? tr� c?a t?p l?u tr? tin c?y.
spring.kafka.streams.ssl.trust-store-password = # M?t kh?u l?u tr? cho t?p tin l?u tr?.
spring.kafka.streams.ssl.trust-store-type = # Lo?i c?a h�ng tin c?y.
spring.kafka.streams.state-dir = # V? tr� th? m?c cho c?a h�ng nh� n??c.
spring.kafka.template.default-topic = # Ch? ?? m?c ??nh m� tin nh?n ???c g?i ??n.

# RABBIT (RabbitProperties)
spring.rabbitmq.addresses = # Danh s�ch ??a ch? ???c ph�n t�ch b?ng d?u ph?y m� m�y kh�ch s? k?t n?i.
spring.rabbitmq.cache.channel.checkout-timeout = # Th?i gian ch? ?? l?y k�nh n?u ?� ??t ??n k�ch th??c b? nh? cache.
spring.rabbitmq.cache.channel.size = # S? k�nh ???c gi? l?i trong b? nh? cache.
spring.rabbitmq.cache.connection.mode = channel # Ch? ?? b? ??m c?a nh� m�y k?t n?i.
spring.rabbitmq.cache.connection.size = # S? l??ng k?t n?i ??n b? nh? cache.
spring.rabbitmq.connection-timeout = # Th?i gian ch? k?t n?i. ??t n� th�nh 0 ?? ??i m�i m�i.
spring.rabbitmq.dynamic = true # C� t?o bean AmqpAdmin hay kh�ng.
spring.rabbitmq.host = localhost # m�y ch? l?u tr? RabbitMQ.
spring.rabbitmq.listener.direct.acknowledge-mode = # Ch? ?? x�c nh?n c?a v�ng ch?a.
spring.rabbitmq.listener.direct.auto-startup = true # C� t? ??ng kh?i ??ng v�ng ch?a khi kh?i ??ng hay kh�ng.
spring.rabbitmq.listener.direct.consumers-per-queue = # S? l??ng ng??i ti�u d�ng tr�n m?i h�ng ??i.
spring.rabbitmq.listener.direct.default-requeue-gone = # C�c giao h�ng b? t? ch?i c� ???c x?p h�ng l?i theo m?c ??nh hay kh�ng.
spring.rabbitmq.listener.direct.idle-event-period = # T?n su?t xu?t b?n c�c s? ki?n v�ng ch?a kh�ng ho?t ??ng.
spring.rabbitmq.listener.direct.missing-queues-Fat = false # C� th?t b?i hay kh�ng n?u c�c h�ng ??i ???c v�ng ch?a khai b�o kh�ng c� s?n tr�n nh� m�i gi?i.
spring.rabbitmq.listener.direct.prefetch = # S? l??ng tin nh?n ch?a ???c x�c nh?n t?i ?a c� th? n?i b?t ? m?i ng??i ti�u d�ng.
spring.rabbitmq.listener.direct.retry.enabled = false # ?� b?t th? xu?t b?n l?i ch?a.
spring.rabbitmq.listener.direct.retry.initial-distance = 1000ms # Kho?ng th?i gian gi?a l?n th? ??u ti�n v� l?n th? hai g?i tin nh?n.
spring.rabbitmq.listener.direct.retry.max-attempts = 3 # S? l?n g?i tin nh?n t?i ?a.
spring.rabbitmq.listener.direct.retry.max-interval = 10000ms # Th?i l??ng t?i ?a gi?a c�c l?n th?.
spring.rabbitmq.listener.direct.retry.multiplier = 1 # H? s? nh�n ?? �p d?ng cho kho?ng th?i gian th? l?i tr??c ?�.
spring.rabbitmq.listener.direct.retry.stateless = true # Cho d� c�c l?n th? l?i l� kh�ng tr?ng th�i hay tr?ng th�i.
spring.rabbitmq.listener.simple.acknowledge-mode = # Ch? ?? x�c nh?n c?a v�ng ch?a.
spring.rabbitmq.listener.simple.auto-startup = true # C� t? ??ng kh?i ??ng v�ng ch?a khi kh?i ??ng hay kh�ng.
spring.rabbitmq.listener.simple.concurrency = # S? ch? ?? y�u c?u tr�nh nghe t?i thi?u.
spring.rabbitmq.listener.simple.default-requeue -osystem = # Vi?c giao h�ng b? t? ch?i c� ???c x?p h�ng l?i theo m?c ??nh hay kh�ng.
spring.rabbitmq.listener.simple.idle-event-period = # T?n su?t xu?t b?n c�c s? ki?n v�ng ch?a kh�ng ho?t ??ng.
spring.rabbitmq.listener.simple.max-concurrency = # S? lu?ng t?i ?a c?a tr�nh g?i ng??i nghe.
spring.rabbitmq.listener.simple.missing-queues-Fat = true # C� th?t b?i kh�ng n?u h�ng ??i ???c v�ng ch?a khai b�o kh�ng c� s?n tr�n tr�nh m�i gi?i v� / ho?c c� d?ng v�ng ch?a n?u m?t ho?c nhi?u h�ng ??i b? x�a trong th?i gian ch?y hay kh�ng.
spring.rabbitmq.listener.simple.prefetch = # S? l??ng tin nh?n ch?a ???c x�c nh?n t?i ?a c� th? n?i b?t ? m?i ng??i ti�u d�ng.
spring.rabbitmq.listener.simple.retry.enabled = false # ?� b?t th? xu?t b?n l?i ch?a.
spring.rabbitmq.listener.simple.retry.initial-distance = 1000ms # Kho?ng th?i gian gi?a l?n th? ??u ti�n v� l?n th? hai g?i tin nh?n.
spring.rabbitmq.listener.simple.retry.max-attempts = 3 # S? l?n g?i tin nh?n t?i ?a.
spring.rabbitmq.listener.simple.retry.max-interval = 10000ms # Th?i l??ng t?i ?a gi?a c�c l?n th?.
spring.rabbitmq.listener.simple.retry.multiplier = 1 # H? s? nh�n ?? �p d?ng cho kho?ng th?i gian th? l?i tr??c ?�.
spring.rabbitmq.listener.simple.retry.stateless = true # Cho d� c�c l?n th? l?i l� kh�ng tr?ng th�i hay tr?ng th�i.
spring.rabbitmq.listener.simple.transaction-size = # S? l??ng tin nh?n ???c x? l� gi?a c�c ack khi ch? ?? x�c nh?n l� T? ??NG. N?u l?n h?n t�m n?p tr??c, t�m n?p tr??c s? ???c t?ng l�n gi� tr? n�y.
spring.rabbitmq.listener.type = lo?i v�ng ch?a tr�nh nghe # ??n gi?n.
spring.rabbitmq.password = guest # ??ng nh?p ?? x�c th?c v?i nh� m�i gi?i.
spring.rabbitmq.port = 5672 # C?ng RabbitMQ.
spring.rabbitmq.publisher-Confirm = false # C� b?t x�c nh?n nh� xu?t b?n hay kh�ng.
spring.rabbitmq.publisher-return = false # C� b?t tr? v? c?a nh� xu?t b?n hay kh�ng.
spring.rabbitmq.requested-heartbeat = # Th?i gian ch? theo y�u c?u c?a nh?p tim; kh�ng cho kh�ng. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
spring.rabbitmq.ssl.algorithm = # Thu?t to�n SSL ?? s? d?ng. Theo m?c ??nh, ???c c?u h�nh b?i th? vi?n kh�ch h�ng Rabbit.
spring.rabbitmq.ssl.enabled = false # C� b?t h? tr? SSL hay kh�ng.
spring.rabbitmq.ssl.key-store = # ???ng d?n ??n kho kh�a ch?a ch?ng ch? SSL.
spring.rabbitmq.ssl.key-store-password = # M?t kh?u ???c s? d?ng ?? truy c?p kho kh�a.
spring.rabbitmq.ssl.key-store-type = PKCS12 # Lo?i c?a h�ng kh�a.
spring.rabbitmq.ssl.trust-store = # C?a h�ng tin c?y l?u gi? ch?ng ch? SSL.
spring.rabbitmq.ssl.trust-store-password = # M?t kh?u ???c s? d?ng ?? truy c?p kho tin c?y.
spring.rabbitmq.ssl.trust-store-type = JKS # Lo?i c?a h�ng tin c?y.
spring.rabbitmq.ssl.validate-server-certificate = true # C� b?t x�c th?c ch?ng ch? ph�a m�y ch? hay kh�ng.
spring.rabbitmq.ssl.verify-hostname = true # C� b?t x�c minh t�n m�y ch? hay kh�ng.
spring.rabbitmq.template.default-receive-queue = # T�n c?a h�ng ??i m?c ??nh ?? nh?n tin nh?n khi kh�ng c� tin nh?n n�o ???c ch? ??nh r� r�ng.
spring.rabbitmq.template.exchange = # T�n c?a s�n giao d?ch m?c ??nh ?? s? d?ng cho c�c ho?t ??ng g?i.
spring.rabbitmq.template.mandatory = # C� b?t th�ng b�o b?t bu?c hay kh�ng.
spring.rabbitmq.template.receive-timeout = # Th?i gian ch? cho c�c ho?t ??ng `nh?n ()`.
spring.rabbitmq.template.reply-timeout = # Th?i gian ch? cho c�c ho?t ??ng `sendAndReceive ()`.
spring.rabbitmq.template.retry.enabled = false # ?� b?t th? xu?t b?n l?i ch?a.
spring.rabbitmq.template.retry.initial-period = 1000ms # Kho?ng th?i gian gi?a l?n th? ??u ti�n v� l?n th? hai g?i tin nh?n.
spring.rabbitmq.template.retry.max -boards = 3 # S? l?n g?i tin nh?n t?i ?a.
spring.rabbitmq.template.retry.max-period = 10000ms # Th?i l??ng t?i ?a gi?a c�c l?n th?.
spring.rabbitmq.template.retry.multiplier = 1 # H? s? nh�n ?? �p d?ng cho kho?ng th?i gian th? l?i tr??c ?�.
spring.rabbitmq.template.routing-key = # Gi� tr? c?a kh�a ??nh tuy?n m?c ??nh ?? s? d?ng cho c�c ho?t ??ng g?i.
spring.rabbitmq.username = guest # ??ng nh?p ng??i d�ng ?? x�c th?c v?i nh� m�i gi?i.
spring.rabbitmq.virtual-host = # M�y ch? ?o ?? s? d?ng khi k?t n?i v?i nh� m�i gi?i.


# ----------------------------------------
# ACTUATOR PROPERTIES
# ----------------------------------------

# MANAGEMENT HTTP SERVER (ManagementServerProperties)
management.server.add-application-context-header = false # Th�m ti�u ?? HTTP "X-Application-Context" trong m?i ph?n h?i.
management.server.address = # ??a ch? m?ng m� c�c ?i?m cu?i qu?n l� s? li�n k?t. Y�u c?u m?t qu?n l� t�y ch?nh.server.port.
management.server.port = # C?ng HTTP c?a ?i?m cu?i qu?n l� (s? d?ng c�ng c?ng v?i ?ng d?ng theo m?c ??nh). ??nh c?u h�nh m?t c?ng kh�c ?? s? d?ng SSL d�nh ri�ng cho qu?n l�.
management.server.servlet.context-path = # ???ng d?n ng? c?nh ?i?m cu?i qu?n l� (v� d?: `/ management`). Y�u c?u m?t qu?n l� t�y ch?nh.server.port.
management.server.ssl.ciphers = # M?t m� SSL ???c h? tr?.
management.server.ssl.client-auth = # Ch? ?? x�c th?c m�y kh�ch.
management.server.ssl.enabled = true # C� b?t h? tr? SSL hay kh�ng.
management.server.ssl.enabled-protocols = # Giao th?c SSL ???c b?t.
management.server.ssl.key-alias = # B� danh x�c ??nh kh�a trong kho kh�a.
management.server.ssl.key-password = # M?t kh?u ???c s? d?ng ?? truy c?p v�o kh�a trong kho kh�a.
management.server.ssl.key-store = # ???ng d?n ??n kho kh�a ch?a ch?ng ch? SSL (th??ng l� t?p jks).
management.server.ssl.key-store-password = # M?t kh?u ???c s? d?ng ?? truy c?p kho kh�a.
management.server.ssl.key-store-provider = # Nh� cung c?p kho kh�a.
management.server.ssl.key-store-type = # Lo?i l?u tr? kh�a.
management.server.ssl.protocol = TLS # giao th?c SSL ?? s? d?ng.
management.server.ssl.trust-store = # C?a h�ng tin c?y gi? ch?ng ch? SSL.
management.server.ssl.trust-store-password = # M?t kh?u ???c s? d?ng ?? truy c?p kho tin c?y.
management.server.ssl.trust-store-provider = # Nh� cung c?p cho c?a h�ng tin c?y.
management.server.ssl.trust-store-type = # Lo?i c?a h�ng tin c?y.

# CLOUDFOUNDRY
management.cloudfoundry.enabled = true # C� b?t ?i?m cu?i thi?t b? truy?n ??ng Cloud Foundry m? r?ng hay kh�ng.
management.cloudfoundry.skip-ssl-validation = false # C� b? qua x�c minh SSL cho c�c l?nh g?i b?o m?t ?i?m cu?i c?a thi?t b? truy?n ??ng Cloud Foundry hay kh�ng.
# ENDPOINTS GENERAL CONFIGURATION
management.endpoints.enabled-by-default = # C� b?t ho?c t?t t?t c? c�c ?i?m cu?i theo m?c ??nh hay kh�ng.

# ENDPOINTS JMX CONFIGURATION (JmxEndpointProperties)
management.endpoints.jmx.domain = org.springframework.boot # Endpoints T�n mi?n JMX. D? ph�ng v? 'spring.jmx.default-domain' n?u ???c ??t.
management.endpoints.jmx.exposure.include = * # ID ?i?m cu?i c?n ???c bao g?m ho?c '*' cho t?t c?.
management.endpoints.jmx.exposure.exclude = # ID ?i?m cu?i c?n ???c lo?i tr? ho?c '*' cho t?t c?.
management.endpoints.jmx.static-names = # Thu?c t�nh t?nh b? sung ?? th�m v�o t?t c? c�c ObjectName c?a MBeans ??i di?n cho c�c ?i?m cu?i.

# ENDPOINTS WEB CONFIGURATION (WebEndpointProperties)
management.endpoints.web.exposure.include = s?c kh?e, th�ng tin # ID ?i?m cu?i c?n ???c bao g?m ho?c '*' cho t?t c?.
management.endpoints.web.exposure.exclude = # ID ?i?m cu?i c?n ???c lo?i tr? ho?c '*' cho t?t c?.
management.endpoints.web.base-path = / actuator # ???ng d?n c? s? cho ?i?m cu?i Web. Li�n quan ??n server.servlet.context-path ho?c management.server.servlet.context-path n?u management.server.port ???c ??nh c?u h�nh.
management.endpoints.web.path-mapping = # �nh x? gi?a c�c ID ?i?m cu?i v� ???ng d?n s? hi?n th? ch�ng.

# ENDPOINTS CORS CONFIGURATION (CorsEndpointProperties)
management.endpoints.web.cors.allow-credentials = # Li?u th�ng tin ??ng nh?p c� ???c h? tr? hay kh�ng. Khi kh�ng ???c ??t, th�ng tin x�c th?c kh�ng ???c h? tr?.
management.endpoints.web.cors.allowed-headers = # Danh s�ch c�c ti�u ?? ???c ph�n t�ch b?ng d?u ph?y ?? cho ph�p trong m?t y�u c?u. '*' cho ph�p t?t c? c�c ti�u ??.
management.endpoints.web.cors.allowed-methods = # Danh s�ch c�c ph??ng th?c ???c ph�n t�ch b?ng d?u ph?y ?? cho ph�p. '*' cho ph�p t?t c? c�c ph??ng th?c. Khi kh�ng ???c ??t, m?c ??nh l� GET.
management.endpoints.web.cors.allowed-origin = # Danh s�ch c�c ngu?n g?c ???c ph�n t�ch b?ng d?u ph?y ?? cho ph�p. '*' cho ph�p t?t c? c�c ngu?n g?c. Khi kh�ng ???c ??t, h? tr? CORS s? b? t?t.
management.endpoints.web.cors.exposed-headers = # Danh s�ch c�c ti�u ?? ???c ph�n t�ch b?ng d?u ph?y ?? ??a v�o m?t ph?n h?i.
management.endpoints.web.cors.max-age = 1800s # Kh�ch h�ng c� th? l?u v�o b? nh? ??m ph?n h?i t? m?t y�u c?u tr??c chuy?n bay trong bao l�u. N?u h?u t? th?i l??ng kh�ng ???c ch? ??nh, gi�y s? ???c s? d?ng.
# AUDIT EVENTS ENDPOINT (AuditEventsEndpoint)
management.endpoint.auditevents.cache.time-to-live = 0ms # Th?i gian t?i ?a m� m?t ph?n h?i c� th? ???c l?u v�o b? nh? cache.
management.endpoint.auditevents.enabled = true # C� b?t ?i?m cu?i auditevents hay kh�ng.

# BEANS ENDPOINT (BeansEndpoint)
management.endpoint.beans.cache.time-to-live = 0ms # Th?i gian t?i ?a m� m?t ph?n h?i c� th? ???c l?u v�o b? nh? cache.
management.endpoint.beans.enabled = true # C� b?t ?i?m cu?i bean hay kh�ng.

# CACHES ENDPOINT (CachesEndpoint)
management.endpoint.caches.cache.time-to-live = 0ms # Th?i gian t?i ?a m� m?t ph?n h?i c� th? ???c l?u trong b? nh? cache.
management.endpoint.caches.enabled = true # C� b?t ?i?m cu?i b? nh? ??m hay kh�ng.

# CONDITIONS REPORT ENDPOINT (ConditionsReportEndpoint)
management.endpoint.conditions.cache.time-to-live = 0ms # Th?i gian t?i ?a m� m?t ph?n h?i c� th? ???c l?u v�o b? nh? cache.
management.endpoint.conditions.enabled = true # C� b?t ?i?m cu?i ?i?u ki?n hay kh�ng.

# CONFIGURATION PROPERTIES REPORT ENDPOINT (ConfigurationPropertiesReportEndpoint, ConfigurationPropertiesReportEndpointProperties)
management.endpoint.configprops.cache.time-to-live = 0ms # Th?i gian t?i ?a m� m?t ph?n h?i c� th? ???c l?u v�o b? nh? cache.
management.endpoint.configprops.enabled = true # C� b?t ?i?m cu?i configprops hay kh�ng.
management.endpoint.configprops.keys-to-sanitize = m?t kh?u, b� m?t, kh�a, m� th�ng b�o,. * th�ng tin ??ng nh?p. *, vcap_services, sun.java.command # C�c kh�a c?n ???c kh? tr�ng. C�c kh�a c� th? l� c�c chu?i ??n gi?n m� thu?c t�nh k?t th�c b?ng ho?c c�c bi?u th?c ch�nh quy.

# ENVIRONMENT ENDPOINT (EnvironmentEndpoint, EnvironmentEndpointProperties)
management.endpoint.env.cache.time-to-live = 0ms # Th?i gian t?i ?a m� m?t ph?n h?i c� th? ???c l?u v�o b? nh? cache.
management.endpoint.env.enabled = true # C� b?t ?i?m cu?i env hay kh�ng.
management.endpoint.env.keys-to-sanitize = m?t kh?u, b� m?t, kh�a, m� th�ng b�o,. * th�ng tin ??ng nh?p. *, vcap_services, sun.java.command # C�c kh�a c?n ???c kh? tr�ng. C�c kh�a c� th? l� c�c chu?i ??n gi?n m� thu?c t�nh k?t th�c b?ng ho?c c�c bi?u th?c ch�nh quy.

# FLYWAY ENDPOINT (FlywayEndpoint)
management.endpoint.flyway.cache.time-to-live = 0ms # Th?i gian t?i ?a m� m?t ph?n h?i c� th? ???c l?u trong b? nh? cache.
management.endpoint.flyway.enabled = true # C� b?t ?i?m cu?i ???ng bay hay kh�ng.

# HEALTH ENDPOINT (HealthEndpoint, HealthEndpointProperties)
management.endpoint.health.cache.time-to-live = 0ms # Th?i gian t?i ?a m� m?t ph?n h?i c� th? ???c l?u v�o b? nh? cache.
management.endpoint.health.enabled = true # C� b?t ?i?m cu?i t�nh tr?ng hay kh�ng.
management.endpoint.health.roles = # Vai tr� ???c s? d?ng ?? x�c ??nh xem ng??i d�ng c� ???c ph�p hi?n th? th�ng tin chi ti?t hay kh�ng. Khi tr?ng, t?t c? ng??i d�ng ?� x�c th?c ??u ???c ?y quy?n.
management.endpoint.health.show-details = never # Khi n�o hi?n th? ??y ?? th�ng tin chi ti?t v? s?c kh?e.

# HEAP DUMP ENDPOINT (HeapDumpWebEndpoint)
management.endpoint.heapdump.cache.time-to-live = 0ms # Th?i gian t?i ?a m� m?t ph?n h?i c� th? ???c l?u v�o b? nh? cache.
management.endpoint.heapdump.enabled = true # C� b?t ?i?m cu?i heapdump hay kh�ng.

# HTTP TRACE ENDPOINT (HttpTraceEndpoint)
management.endpoint.httptrace.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.httptrace.enabled=true # Whether to enable the httptrace endpoint.

# INFO ENDPOINT (InfoEndpoint)
info= # Arbitrary properties to add to the info endpoint.
management.endpoint.info.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.info.enabled=true # Whether to enable the info endpoint.

# INTEGRATION GRAPH ENDPOINT (IntegrationGraphEndpoint)
management.endpoint.integrationgraph.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.integrationgraph.enabled=true # Whether to enable the integrationgraph endpoint.

# JOLOKIA ENDPOINT (JolokiaProperties)
management.endpoint.jolokia.config.*= # Jolokia settings. Refer to the documentation of Jolokia for more details.
management.endpoint.jolokia.enabled=true # Whether to enable the jolokia endpoint.

# LIQUIBASE ENDPOINT (LiquibaseEndpoint)
management.endpoint.liquibase.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.liquibase.enabled=true # Whether to enable the liquibase endpoint.

# LOG FILE ENDPOINT (LogFileWebEndpoint, LogFileWebEndpointProperties)
management.endpoint.logfile.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.logfile.enabled=true # Whether to enable the logfile endpoint.
management.endpoint.logfile.external-file= # External Logfile to be accessed. Can be used if the logfile is written by output redirect and not by the logging system itself.

# LOGGERS ENDPOINT (LoggersEndpoint)
management.endpoint.loggers.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.loggers.enabled=true # Whether to enable the loggers endpoint.

# REQUEST MAPPING ENDPOINT (MappingsEndpoint)
management.endpoint.mappings.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.mappings.enabled=true # Whether to enable the mappings endpoint.

# METRICS ENDPOINT (MetricsEndpoint)
management.endpoint.metrics.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.metrics.enabled=true # Whether to enable the metrics endpoint.

# PROMETHEUS ENDPOINT (PrometheusScrapeEndpoint)
management.endpoint.prometheus.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.prometheus.enabled=true # Whether to enable the prometheus endpoint.

# SCHEDULED TASKS ENDPOINT (ScheduledTasksEndpoint)
management.endpoint.scheduledtasks.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.scheduledtasks.enabled=true # Whether to enable the scheduledtasks endpoint.

# SESSIONS ENDPOINT (SessionsEndpoint)
management.endpoint.sessions.enabled=true # Whether to enable the sessions endpoint.

# SHUTDOWN ENDPOINT (ShutdownEndpoint)
management.endpoint.shutdown.enabled=false # Whether to enable the shutdown endpoint.

# THREAD DUMP ENDPOINT (ThreadDumpEndpoint)
management.endpoint.threaddump.cache.time-to-live=0ms # Maximum time that a response can be cached.
management.endpoint.threaddump.enabled=true # Whether to enable the threaddump endpoint.

# HEALTH INDICATORS
management.health.db.enabled=true # Whether to enable database health check.
management.health.cassandra.enabled=true # Whether to enable Cassandra health check.
management.health.couchbase.enabled=true # Whether to enable Couchbase health check.
management.health.defaults.enabled=true # Whether to enable default health indicators.
management.health.diskspace.enabled=true # Whether to enable disk space health check.
management.health.diskspace.path= # Path used to compute the available disk space.
management.health.diskspace.threshold=10MB # Minimum disk space that should be available.
management.health.elasticsearch.enabled=true # Whether to enable Elasticsearch health check.
management.health.elasticsearch.indices= # Comma-separated index names.
management.health.elasticsearch.response-timeout=100ms # Time to wait for a response from the cluster.
management.health.influxdb.enabled=true # Whether to enable InfluxDB health check.
management.health.jms.enabled=true # Whether to enable JMS health check.
management.health.ldap.enabled=true # Whether to enable LDAP health check.
management.health.mail.enabled=true # Whether to enable Mail health check.
management.health.mongo.enabled=true # Whether to enable MongoDB health check.
management.health.neo4j.enabled=true # Whether to enable Neo4j health check.
management.health.rabbit.enabled=true # Whether to enable RabbitMQ health check.
management.health.redis.enabled=true # Whether to enable Redis health check.
management.health.solr.enabled=true # Whether to enable Solr health check.
management.health.status.http-mapping= # Mapping of health statuses to HTTP status codes. By default, registered health statuses map to sensible defaults (for example, UP maps to 200).
management.health.status.order=DOWN,OUT_OF_SERVICE,UP,UNKNOWN # Comma-separated list of health statuses in order of severity.

# HTTP TRACING (HttpTraceProperties)
management.trace.http.enabled=true # Whether to enable HTTP request-response tracing.
management.trace.http.include=request-headers,response-headers,cookies,errors # Items to be included in the trace.

# INFO CONTRIBUTORS (InfoContributorProperties)
management.info.build.enabled=true # Whether to enable build info.
management.info.defaults.enabled=true # Whether to enable default info contributors.
management.info.env.enabled=true # Whether to enable environment info.
management.info.git.enabled=true # Whether to enable git info.
management.info.git.mode=simple # Mode to use to expose git information.

# METRICS
management.metrics.distribution.maximum-expected-value.*= # Maximum value that meter IDs starting-with the specified name are expected to observe.
management.metrics.distribution.minimum-expected-value.*= # Minimum value that meter IDs starting-with the specified name are expected to observe.
management.metrics.distribution.percentiles.*= # Specific computed non-aggregable percentiles to ship to the backend for meter IDs starting-with the specified name.
management.metrics.distribution.percentiles-histogram.*= # Whether meter IDs starting with the specified name should publish percentile histograms.
management.metrics.distribution.sla.*= # Specific SLA boundaries for meter IDs starting-with the specified name. The longest match wins.
management.metrics.enable.*= # Whether meter IDs starting-with the specified name should be enabled. The longest match wins, the key `all` can also be used to configure all meters.
management.metrics.export.appoptics.api-token= # AppOptics API token.
management.metrics.export.appoptics.batch-size=500 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.appoptics.connect-timeout=5s # Connection timeout for requests to this backend.
management.metrics.export.appoptics.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.appoptics.host-tag=instance # Tag that will be mapped to "@host" when shipping metrics to AppOptics.
management.metrics.export.appoptics.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.appoptics.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.appoptics.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.appoptics.uri=https://api.appoptics.com/v1/measurements # URI to ship metrics to.
management.metrics.export.atlas.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.atlas.config-refresh-frequency=10s # Frequency for refreshing config settings from the LWC service.
management.metrics.export.atlas.config-time-to-live=150s # Time to live for subscriptions from the LWC service.
management.metrics.export.atlas.config-uri=http://localhost:7101/lwc/api/v1/expressions/local-dev # URI for the Atlas LWC endpoint to retrieve current subscriptions.
management.metrics.export.atlas.connect-timeout=1s # Connection timeout for requests to this backend.
management.metrics.export.atlas.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.atlas.eval-uri=http://localhost:7101/lwc/api/v1/evaluate # URI for the Atlas LWC endpoint to evaluate the data for a subscription.
management.metrics.export.atlas.lwc-enabled=false # Whether to enable streaming to Atlas LWC.
management.metrics.export.atlas.meter-time-to-live=15m # Time to live for meters that do not have any activity. After this period the meter will be considered expired and will not get reported.
management.metrics.export.atlas.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.atlas.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.atlas.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.atlas.uri=http://localhost:7101/api/v1/publish # URI of the Atlas server.
management.metrics.export.datadog.api-key= # Datadog API key.
management.metrics.export.datadog.application-key= # Datadog application key. Not strictly required, but improves the Datadog experience by sending meter descriptions, types, and base units to Datadog.
management.metrics.export.datadog.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.datadog.connect-timeout=1s # Connection timeout for requests to this backend.
management.metrics.export.datadog.descriptions=true # Whether to publish descriptions metadata to Datadog. Turn this off to minimize the amount of metadata sent.
management.metrics.export.datadog.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.datadog.host-tag=instance # Tag that will be mapped to "host" when shipping metrics to Datadog.
management.metrics.export.datadog.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.datadog.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.datadog.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.datadog.uri=https://app.datadoghq.com # URI to ship metrics to. If you need to publish metrics to an internal proxy en-route to Datadog, you can define the location of the proxy with this.
management.metrics.export.dynatrace.api-token= # Dynatrace authentication token.
management.metrics.export.dynatrace.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.dynatrace.connect-timeout=1s # Connection timeout for requests to this backend.
management.metrics.export.dynatrace.device-id= # ID of the custom device that is exporting metrics to Dynatrace.
management.metrics.export.dynatrace.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.dynatrace.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.dynatrace.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.dynatrace.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.dynatrace.technology-type=java # Technology type for exported metrics. Used to group metrics under a logical technology name in the Dynatrace UI.
management.metrics.export.dynatrace.uri= # URI to ship metrics to. Should be used for SaaS, self managed instances or to en-route through an internal proxy.
management.metrics.export.elastic.auto-create-index=true # Whether to create the index automatically if it does not exist.
management.metrics.export.elastic.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.elastic.connect-timeout=1s # Connection timeout for requests to this backend.
management.metrics.export.elastic.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.elastic.host=http://localhost:9200 # Host to export metrics to.
management.metrics.export.elastic.index=metrics # Index to export metrics to.
management.metrics.export.elastic.index-date-format=yyyy-MM # Index date format used for rolling indices. Appended to the index name, preceded by a '-'.
management.metrics.export.elastic.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.elastic.password= # Login password of the Elastic server.
management.metrics.export.elastic.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.elastic.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.elastic.timestamp-field-name=@timestamp # Name of the timestamp field.
management.metrics.export.elastic.user-name= # Login user of the Elastic server.
management.metrics.export.ganglia.addressing-mode=multicast # UDP addressing mode, either unicast or multicast.
management.metrics.export.ganglia.duration-units=milliseconds # Base time unit used to report durations.
management.metrics.export.ganglia.enabled=true # Whether exporting of metrics to Ganglia is enabled.
management.metrics.export.ganglia.host=localhost # Host of the Ganglia server to receive exported metrics.
management.metrics.export.ganglia.port=8649 # Port of the Ganglia server to receive exported metrics.
management.metrics.export.ganglia.protocol-version=3.1 # Ganglia protocol version. Must be either 3.1 or 3.0.
management.metrics.export.ganglia.rate-units=seconds # Base time unit used to report rates.
management.metrics.export.ganglia.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.ganglia.time-to-live=1 # Time to live for metrics on Ganglia. Set the multi-cast Time-To-Live to be one greater than the number of hops (routers) between the hosts.
management.metrics.export.graphite.duration-units=milliseconds # Base time unit used to report durations.
management.metrics.export.graphite.enabled=true # Whether exporting of metrics to Graphite is enabled.
management.metrics.export.graphite.host=localhost # Host of the Graphite server to receive exported metrics.
management.metrics.export.graphite.port=2004 # Port of the Graphite server to receive exported metrics.
management.metrics.export.graphite.protocol=pickled # Protocol to use while shipping data to Graphite.
management.metrics.export.graphite.rate-units=seconds # Base time unit used to report rates.
management.metrics.export.graphite.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.graphite.tags-as-prefix= # For the default naming convention, turn the specified tag keys into part of the metric prefix.
management.metrics.export.humio.api-token= # Humio API token.
management.metrics.export.humio.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.humio.connect-timeout=5s # Connection timeout for requests to this backend.
management.metrics.export.humio.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.humio.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.humio.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.humio.repository=sandbox # Name of the repository to publish metrics to.
management.metrics.export.humio.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.humio.tags.*= # Humio tags describing the data source in which metrics will be stored. Humio tags are a distinct concept from Micrometer's tags. Micrometer's tags are used to divide metrics along dimensional boundaries.
management.metrics.export.humio.uri=https://cloud.humio.com # URI to ship metrics to. If you need to publish metrics to an internal proxy en-route to Humio, you can define the location of the proxy with this.
management.metrics.export.influx.auto-create-db=true # Whether to create the Influx database if it does not exist before attempting to publish metrics to it.
management.metrics.export.influx.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.influx.compressed=true # Whether to enable GZIP compression of metrics batches published to Influx.
management.metrics.export.influx.connect-timeout=1s # Connection timeout for requests to this backend.
management.metrics.export.influx.consistency=one # Write consistency for each point.
management.metrics.export.influx.db=mydb # Tag that will be mapped to "host" when shipping metrics to Influx.
management.metrics.export.influx.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.influx.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.influx.password= # Login password of the Influx server.
management.metrics.export.influx.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.influx.retention-duration= # Time period for which Influx should retain data in the current database.
management.metrics.export.influx.retention-shard-duration= # Time range covered by a shard group.
management.metrics.export.influx.retention-policy= # Retention policy to use (Influx writes to the DEFAULT retention policy if one is not specified).
management.metrics.export.influx.retention-replication-factor= # How many copies of the data are stored in the cluster.
management.metrics.export.influx.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.influx.uri=http://localhost:8086 # URI of the Influx server.
management.metrics.export.influx.user-name= # Login user of the Influx server.
management.metrics.export.jmx.domain=metrics # Metrics JMX domain name.
management.metrics.export.jmx.enabled=true # Whether exporting of metrics to JMX is enabled.
management.metrics.export.jmx.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.kairos.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.kairos.connect-timeout=1s # Connection timeout for requests to this backend.
management.metrics.export.kairos.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.kairos.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.kairos.password= # Login password of the KairosDB server.
management.metrics.export.kairos.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.kairos.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.kairos.uri= localhost:8080/api/v1/datapoints # URI of the KairosDB server.
management.metrics.export.kairos.user-name= # Login user of the KairosDB server.
management.metrics.export.newrelic.account-id= # New Relic account ID.
management.metrics.export.newrelic.api-key= # New Relic API key.
management.metrics.export.newrelic.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.newrelic.connect-timeout=1s # Connection timeout for requests to this backend.
management.metrics.export.newrelic.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.newrelic.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.newrelic.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.newrelic.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.newrelic.uri=https://insights-collector.newrelic.com # URI to ship metrics to.
management.metrics.export.prometheus.descriptions=true # Whether to enable publishing descriptions as part of the scrape payload to Prometheus. Turn this off to minimize the amount of data sent on each scrape.
management.metrics.export.prometheus.enabled=true # Whether exporting of metrics to Prometheus is enabled.
management.metrics.export.prometheus.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.prometheus.pushgateway.base-url=localhost:9091 # Base URL for the Pushgateway.
management.metrics.export.prometheus.pushgateway.enabled=false # Enable publishing via a Prometheus Pushgateway.
management.metrics.export.prometheus.pushgateway.grouping-key= # Grouping key for the pushed metrics.
management.metrics.export.prometheus.pushgateway.job= # Job identifier for this application instance.
management.metrics.export.prometheus.pushgateway.push-rate=1m # Frequency with which to push metrics.
management.metrics.export.prometheus.pushgateway.shutdown-operation= # Operation that should be performed on shutdown.
management.metrics.export.signalfx.access-token= # SignalFX access token.
management.metrics.export.signalfx.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.signalfx.connect-timeout=1s # Connection timeout for requests to this backend.
management.metrics.export.signalfx.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.signalfx.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.signalfx.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.signalfx.source= # Uniquely identifies the app instance that is publishing metrics to SignalFx. Defaults to the local host name.
management.metrics.export.signalfx.step=10s # Step size (i.e. reporting frequency) to use.
management.metrics.export.signalfx.uri=https://ingest.signalfx.com # URI to ship metrics to.
management.metrics.export.simple.enabled=true # Whether, in the absence of any other exporter, exporting of metrics to an in-memory backend is enabled.
management.metrics.export.simple.mode=cumulative # Counting mode.
management.metrics.export.simple.step=1m # Step size (i.e. reporting frequency) to use.
management.metrics.export.statsd.enabled=true # Whether exporting of metrics to StatsD is enabled.
management.metrics.export.statsd.flavor=datadog # StatsD line protocol to use.
management.metrics.export.statsd.host=localhost # Host of the StatsD server to receive exported metrics.
management.metrics.export.statsd.max-packet-length=1400 # Total length of a single payload should be kept within your network's MTU.
management.metrics.export.statsd.polling-frequency=10s # How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed (or publishUnchangedMeters is true), it is sent to the StatsD server.
management.metrics.export.statsd.port=8125 # Port of the StatsD server to receive exported metrics.
management.metrics.export.statsd.publish-unchanged-meters=true # Whether to send unchanged meters to the StatsD server.
management.metrics.export.wavefront.api-token= # API token used when publishing metrics directly to the Wavefront API host.
management.metrics.export.wavefront.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.
management.metrics.export.wavefront.connect-timeout=1s # Connection timeout for requests to this backend.
management.metrics.export.wavefront.enabled=true # Whether exporting of metrics to this backend is enabled.
management.metrics.export.wavefront.global-prefix= # Global prefix to separate metrics originating from this app's white box instrumentation from those originating from other Wavefront integrations when viewed in the Wavefront UI.
management.metrics.export.wavefront.num-threads=2 # Number of threads to use with the metrics publishing scheduler.
management.metrics.export.wavefront.read-timeout=10s # Read timeout for requests to this backend.
management.metrics.export.wavefront.source= # Unique identifier for the app instance that is the source of metrics being published to Wavefront. Defaults to the local host name.
management.metrics.export.wavefront.step=10s # Step size (i.e. reporting frequency) to use.
management.metrics.export.wavefront.uri=https://longboard.wavefront.com # URI to ship metrics to.
management.metrics.use-global-registry=true # Whether auto-configured MeterRegistry implementations should be bound to the global static registry on Metrics.
management.metrics.tags.*= # Common tags that are applied to every meter.
management.metrics.web.client.max-uri-tags=100 # Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.
management.metrics.web.client.requests-metric-name=http.client.requests # Name of the metric for sent requests.
management.metrics.web.server.auto-time-requests=true # Whether requests handled by Spring MVC, WebFlux or Jersey should be automatically timed.
management.metrics.web.server.max-uri-tags=100 # Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.
management.metrics.web.server.requests-metric-name=http.server.requests # Name of the metric for received requests.


# ----------------------------------------
# DEVTOOLS PROPERTIES
# ----------------------------------------

# DEVTOOLS (DevToolsProperties)
spring.devtools.add-properties=true # Whether to enable development property defaults.
spring.devtools.livereload.enabled=true # Whether to enable a livereload.com-compatible server.
spring.devtools.livereload.port=35729 # Server port.
spring.devtools.restart.additional-exclude= # Additional patterns that should be excluded from triggering a full restart.
spring.devtools.restart.additional-paths= # Additional paths to watch for changes.
spring.devtools.restart.enabled=true # Whether to enable automatic restart.
spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties,META-INF/build-info.properties # Patterns that should be excluded from triggering a full restart.
spring.devtools.restart.log-condition-evaluation-delta=true # Whether to log the condition evaluation delta upon restart.
spring.devtools.restart.poll-interval=1s # Amount of time to wait between polling for classpath changes.
spring.devtools.restart.quiet-period=400ms # Amount of quiet time required without any classpath changes before a restart is triggered.
spring.devtools.restart.trigger-file= # Name of a specific file that, when changed, triggers the restart check. If not specified, any classpath file change triggers the restart.

# REMOTE DEVTOOLS (RemoteDevToolsProperties)
spring.devtools.remote.context-path=/.~~spring-boot!~ # Context path used to handle the remote connection.
spring.devtools.remote.proxy.host= # The host of the proxy to use to connect to the remote application.
spring.devtools.remote.proxy.port= # The port of the proxy to use to connect to the remote application.
spring.devtools.remote.restart.enabled=true # Whether to enable remote restart.
spring.devtools.remote.secret= # A shared secret required to establish a connection (required to enable remote support).
spring.devtools.remote.secret-header-name=X-AUTH-TOKEN # HTTP header used to transfer the shared secret.


# ----------------------------------------
# TESTING PROPERTIES
# ----------------------------------------

spring.test.database.replace=any # Type of existing DataSource to replace.
spring.test.mockmvc.print=default # MVC Print option.